<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>朱阳星的日常</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.zhuyangxing.cn/"/>
  <updated>2017-06-19T06:03:29.000Z</updated>
  <id>http://www.zhuyangxing.cn/</id>
  
  <author>
    <name>朱阳星</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>读airbnb标准有感</title>
    <link href="http://www.zhuyangxing.cn/2017/06/19/%E8%AF%BBairbnb%E6%A0%87%E5%87%86%E6%9C%89%E6%84%9F/"/>
    <id>http://www.zhuyangxing.cn/2017/06/19/读airbnb标准有感/</id>
    <published>2017-06-19T06:03:20.000Z</published>
    <updated>2017-06-19T06:03:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>读<a href="https://github.com/airbnb/javascript" target="_blank" rel="external">airbnb javascript标准</a> 有感</p>
<p>在读标准时发现还有很多知识点不大明白记录之<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">Array.map</div><div class="line">Array.forEach</div><div class="line">Array.reduce</div><div class="line">Array.from</div><div class="line">Object.assign</div><div class="line">Number(string)</div><div class="line">object literals</div><div class="line">export 和export default区别</div><div class="line">import foo, &#123; named1, named2 &#125; from &apos;foo&apos;;</div></pre></td></tr></table></figure></p>
<h2 id="Array-map介绍"><a href="#Array-map介绍" class="headerlink" title="Array.map介绍"></a>Array.map介绍</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">var new_array = arr.map(callback[, thisArg])</div><div class="line"></div><div class="line">callback</div><div class="line">        Function that produces an element of the new Array, taking three arguments:</div><div class="line">    currentValue 当前值</div><div class="line">        The current element being processed in the array.</div><div class="line">    index index值 从0开始的index值</div><div class="line">        The index of the current element being processed in the array.</div><div class="line">    array 当前数组</div><div class="line">        The array map was called upon.</div><div class="line">thisArg</div><div class="line">    Optional. Value to use as this when executing callback.</div><div class="line">    If a thisArg parameter is provided to map, it will be used as callback&apos;s this value. Otherwise, the value undefined will be used as its this value.</div><div class="line">Return value  返回值为新数组不影响原数组</div><div class="line">    A new array with each element being the result of the callback function.</div><div class="line"></div><div class="line">Array.map不修改原数组</div></pre></td></tr></table></figure>
<h2 id="Array-forEach介绍"><a href="#Array-forEach介绍" class="headerlink" title="Array.forEach介绍"></a>Array.forEach介绍</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">arr.forEach(function callback(currentValue, index, array) &#123;</div><div class="line">    //your iterator</div><div class="line">&#125;[, thisArg]);</div><div class="line"></div><div class="line">callback</div><div class="line">        Function to execute for each element, taking three arguments:</div><div class="line">    currentValue  当前值</div><div class="line">        The current element being processed in the array.</div><div class="line">    index  从0开始的index值</div><div class="line">        The index of the current element being processed in the array.</div><div class="line">    array 当前数组</div><div class="line">        The array that forEach() is being applied to.</div><div class="line">thisArg [Optional]</div><div class="line">        Value to use as this (i.e the reference Object) when executing callback.</div><div class="line">        If a thisArg parameter is provided to forEach, it will be used as callback&apos;s this value. Otherwise, the value undefined will be used as its this value.</div><div class="line">Return value</div><div class="line">    undefined.</div><div class="line">Array.forEach不修改原数组</div></pre></td></tr></table></figure>
<h2 id="Array-reduce介绍"><a href="#Array-reduce介绍" class="headerlink" title="Array.reduce介绍"></a>Array.reduce介绍</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">arr.reduce(callback, [initialValue])</div><div class="line"></div><div class="line">callback</div><div class="line">        Function to execute on each element in the array, taking four arguments:</div><div class="line">    accumulator 累加器</div><div class="line">        The accumulator accumulates the callback&apos;s return values; it is the accumulated value previously returned in the last invocation of the callback, or initialValue, if supplied (see below).</div><div class="line">    currentValue 当前值</div><div class="line">        The current element being processed in the array.</div><div class="line">    currentIndex</div><div class="line">        The index of the current element being processed in the array. Starts at index 0, if an initialValue is provided, and at index 1 otherwise.</div><div class="line">    array  当前数组</div><div class="line">        The array reduce was called upon.</div><div class="line">    initialValue</div><div class="line">        累加器初始值，</div><div class="line">        如果不存在则accumulator为第一个元素值，currentValue为第二个元素值 currentIndex从1开始</div><div class="line">        如果存在则accumulator为初始值，currentValue为第一个元素值 currentIndex从0开始</div><div class="line">        [Optional] Value to use as the first argument to the first call of the callback. If no initial value is supplied, the first element in the array will be used. Calling reduce on an empty array without an initial value is an error.</div><div class="line">Return value</div><div class="line">    The value that results from the reduction.</div></pre></td></tr></table></figure>
<h2 id="Array-from介绍"><a href="#Array-from介绍" class="headerlink" title="Array.from介绍"></a>Array.from介绍</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">Parameters</div><div class="line">    arrayLike</div><div class="line">        An array-like or iterable object to convert to an array.</div><div class="line">    mapFn [Optional]</div><div class="line">        Map function to call on every element of the array.</div><div class="line">    thisArg [Optional]</div><div class="line">        Value to use as this when executing mapFn.</div><div class="line">Return value</div><div class="line">    A new Array instance.</div><div class="line">Array.from可以把类数组对象转变成数组如函数的入参,</div><div class="line">document.querySelectorAll(&quot;div&quot;)返回的nodelist</div></pre></td></tr></table></figure>
<h2 id="Object-assign"><a href="#Object-assign" class="headerlink" title="Object.assign()"></a>Object.assign()</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">Object.assign(target, ...sources)</div><div class="line"></div><div class="line">The Object.assign() method is used to copy the values of all enumerable own properties from one or more source objects to a target object. It will return the target object.</div><div class="line"></div><div class="line">Parameters</div><div class="line">    target</div><div class="line">        The target object.</div><div class="line">    sources</div><div class="line">        The source object(s).</div><div class="line">Return value</div><div class="line">    The target object.</div><div class="line"></div><div class="line">被用来复制一个或多个对象的可枚举属性（浅拷贝,需留意多层级嵌套对象）</div></pre></td></tr></table></figure>
<h2 id="Number-string"><a href="#Number-string" class="headerlink" title="Number(string)"></a>Number(string)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Using the Number object to assign values to numeric variables</div><div class="line">如果string不能转换为数字则返回NaN</div></pre></td></tr></table></figure>
<h2 id="object-literals"><a href="#object-literals" class="headerlink" title="object literals"></a>object literals</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">这就是对象字面量</div><div class="line">const a=&#123;</div><div class="line">    name:zs,</div><div class="line">    age:18,</div><div class="line">&#125;</div><div class="line"></div><div class="line">const b =[1,3,4,5,6,7];</div></pre></td></tr></table></figure>
<h2 id="export-和export-default区别"><a href="#export-和export-default区别" class="headerlink" title="export 和export default区别"></a>export 和export default区别</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">导出和默认导出</div><div class="line">导出可以有多种但export default只能有一个</div><div class="line"></div><div class="line">function foo()&#123;</div><div class="line"></div><div class="line">&#125;</div><div class="line">function bar()&#123;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">export var named1 = &apos;Michael&apos;;</div><div class="line">export var named2 = &apos;Jackson&apos;;</div><div class="line">export &#123;bar&#125; ;</div><div class="line">export default foo;</div></pre></td></tr></table></figure>
<h2 id="import-foo-named1-named2-from-‘foo’"><a href="#import-foo-named1-named2-from-‘foo’" class="headerlink" title="import foo, { named1, named2 } from ‘foo’;"></a>import foo, { named1, named2 } from ‘foo’;</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">即在一条import语句中，同时输入默认方法和其他变量，可以写成下面这样。</div><div class="line">import foo, &#123; named1, named2 &#125; from &apos;foo&apos;;</div><div class="line">foo为export default</div><div class="line">named1 和 named2 为export &#123;named1&#125;,eport &#123;named2&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      读airbnb标准有感
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>使用sass-lint 检验自己代码</title>
    <link href="http://www.zhuyangxing.cn/2017/06/02/%E4%BD%BF%E7%94%A8sass-lint%E6%A3%80%E9%AA%8C%E8%87%AA%E5%B7%B1%E4%BB%A3%E7%A0%81/"/>
    <id>http://www.zhuyangxing.cn/2017/06/02/使用sass-lint检验自己代码/</id>
    <published>2017-06-02T08:57:16.000Z</published>
    <updated>2017-06-19T06:02:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>在给ATOM装上<code>linter-sass-lint</code>之后，校验了下虽然木有错但是出现了很多的警告信息。<br>分类下具体包含以下几种<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">Warning	sass-lint	quotes Strings must use single quotes	1:9</div><div class="line">Warning	sass-lint	indentation Mixed tabs and spaces	6:2</div><div class="line">Warning	sass-lint	class-name-format Class &apos;.content_wrap&apos; should be written in lowercase with hyphens	10:3</div><div class="line">Warning	sass-lint	force-element-nesting Type-selector should be nested within its parent Pseudo-class	18:4</div><div class="line">Warning	sass-lint	force-element-nesting Class should be nested within its parent Class	24:4</div><div class="line">Warning	sass-lint	force-pseudo-nesting Pseudo-class should be nested within its parent Type-selector	18:4</div><div class="line">Warning	sass-lint	force-pseudo-nesting Pseudo-class should be nested within its parent Class	64:4</div><div class="line">Warning	sass-lint	property-sort-order Expected `margin-bottom`, found `padding`	34:3</div><div class="line">Warning	sass-lint	no-color-literals Color literals such as &apos;#e6e6e6&apos; should only be used in variable declarations	43:21</div><div class="line">Warning	sass-lint	extends-before-declarations Extends should come before declarations	71:4</div><div class="line">Warning	sass-lint	border-zero A value of `none` is not allowed. `0` must be used.	135:13</div></pre></td></tr></table></figure></p>
<p>针对每一种类型查看警告说明结果如下<br><a href="https://github.com/sasstools/sass-lint/blob/master/docs/rules/quotes.md" target="_blank" rel="external">文件引入默认使用单引号</a><br><a href="https://github.com/sasstools/sass-lint/blob/master/docs/rules/indentation.md" target="_blank" rel="external">缩进不能混合tab和空格（默认两个空格）</a><br><a href="https://github.com/sasstools/sass-lint/blob/master/docs/rules/class-name-format.md" target="_blank" rel="external">类名格式默认用连字符链接的纯小写字母 </a><br><a href="https://github.com/sasstools/sass-lint/blob/master/docs/rules/force-element-nesting.md" target="_blank" rel="external">强制元素嵌套 </a><br><a href="https://github.com/sasstools/sass-lint/blob/master/docs/rules/force-pseudo-nesting.md" target="_blank" rel="external">强制伪类嵌套 </a><br><a href="https://github.com/sasstools/sass-lint/blob/master/docs/rules/property-sort-order.md" target="_blank" rel="external">属性排序（默认用字母排序） </a><br><a href="https://github.com/sasstools/sass-lint/tree/master/docs/rules/no-color-literals.md" target="_blank" rel="external">无颜色字面量（默认统一使用变量） </a><br><a href="https://github.com/sasstools/sass-lint/tree/master/docs/rules/extends-before-declarations.md" target="_blank" rel="external">继承放到第一个 </a><br><a href="https://github.com/sasstools/sass-lint/blob/master/docs/rules/border-zero.md" target="_blank" rel="external">默认无边框设置<code>border:0;</code> </a>  </p>
]]></content>
    
    <summary type="html">
    
      使用sass-lint 检验自己代码并处理error及警告信息
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>git diff 两个版本的某个文件</title>
    <link href="http://www.zhuyangxing.cn/2017/06/02/git%20diff%20%E4%B8%A4%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84%E6%9F%90%E4%B8%AA%E6%96%87%E4%BB%B6/"/>
    <id>http://www.zhuyangxing.cn/2017/06/02/git diff 两个版本的某个文件/</id>
    <published>2017-06-02T06:27:39.000Z</published>
    <updated>2017-06-19T06:02:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>昨天遇到一个奇怪的问题，其实也不复杂，就是对一个<code>input</code>添加日历控件，所有js代码也都写好了只需要加上个<code>class</code>就成了结果这个日历控件死活不出来。结果同事从能正常显示控件的地儿复制了一段竟然好了。问他改了哪里他说不知道，他说不知道没改动啥东西我就想到了文件版本对比。  </p>
<p>方法一：还是我最常用的命令行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git diff &lt;commitA&gt; &lt;commitB&gt; filename</div></pre></td></tr></table></figure>
<p>方法二：在gitlab上对比查看  </p>
<p>输入两个提交版本，会显示所有文件的版本差异相同的则不显示,具体如下图<br><img src="http://7xl9u9.com1.z0.glb.clouddn.com/WX20170602-140742@2x.png" alt="image"></p>
<p>再上一张我没找到问题的文件对比图，这确实是什么都没改啊（加了class这个除外）<br><img src="http://7xl9u9.com1.z0.glb.clouddn.com/WX20170602-141302@2x.png" alt="image"></p>
]]></content>
    
    <summary type="html">
    
      git比较两个版本的某一个文件详细变化内容
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>面试中遇到的几个问题</title>
    <link href="http://www.zhuyangxing.cn/2017/05/25/%E9%9D%A2%E8%AF%95%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%87%A0%E4%B8%AA%E9%97%AE%E9%A2%98/"/>
    <id>http://www.zhuyangxing.cn/2017/05/25/面试中遇到的几个问题/</id>
    <published>2017-05-25T06:44:15.000Z</published>
    <updated>2017-06-19T06:04:27.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用原生js在不添加属性的前提下给li添加click事件-返回当前li的index值"><a href="#使用原生js在不添加属性的前提下给li添加click事件-返回当前li的index值" class="headerlink" title="使用原生js在不添加属性的前提下给li添加click事件,返回当前li的index值"></a>使用原生js在不添加属性的前提下给li添加click事件,返回当前li的index值</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--html结构如下--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"list"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>111<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>222<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>333<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>444<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>555<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>666<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<p>我当时想在不添加属性的情况下无法获取该li的index值，于是就想不起来解决办法了。<br>至于事件的话遍历所有li通过添加addEventListener和attachEvent添加。<br>也想过在li上直接绑定click事件即在li标签上添加<code>onclick = &quot;getIndex(this)&quot;</code><br>但是这样不就相当于添加了属性了么？<br>后来看到别的网友的解决方案感觉蛮好的，方案如下<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">bindClick</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> ul = <span class="built_in">document</span>.getElementById(<span class="string">"list"</span>), li;</div><div class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; ul.children.length; i++) &#123;</div><div class="line">    li = ul.children[i];</div><div class="line">    li.index = i;</div><div class="line">    <span class="comment">// 长时间不用居然忘记了还有这种写法</span></div><div class="line">    li.onclick = <span class="function"><span class="keyword">function</span> <span class="title">hello</span>(<span class="params"></span>) </span>&#123;</div><div class="line">      alert(<span class="keyword">this</span>.index);</div><div class="line">    &#125;;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">bindClick();</div></pre></td></tr></table></figure></p>
<p>我感觉还有更好的解决方法即事件代理，这个无法获取li元素的index值 只能添加属性(与题意不符了)<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">bindClick</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> ul = <span class="built_in">document</span>.getElementById(<span class="string">"list"</span>);</div><div class="line">  ul.onclick=<span class="function"><span class="keyword">function</span> <span class="title">hello</span>(<span class="params">event</span>)</span>&#123;</div><div class="line">     <span class="built_in">console</span>.log(event.target.getAttribute(<span class="string">"index"</span>));</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;ul.children.length;i++)&#123;</div><div class="line">      ul.children[i].setAttribute(<span class="string">"index"</span>,i);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">bindClick();</div></pre></td></tr></table></figure></p>
<p>可以通过<code>array.map</code>方法获取到<code>index</code>值<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">bindClick2</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> ul = <span class="built_in">document</span>.getElementById(<span class="string">"list"</span>);</div><div class="line">  <span class="comment">// Node.children is a read-only property that returns a live HTMLCollection of the child elements of Node</span></div><div class="line">  <span class="comment">// ul.children 获取的是HTMLCollection对象</span></div><div class="line">  <span class="comment">// 这个东西和arguments一样属于类数组对象需要转为数组才能使用数据的map方法（es5）</span></div><div class="line">  <span class="comment">// 因为map方法可以获取数组的index</span></div><div class="line">  <span class="keyword">var</span> lis = <span class="built_in">Array</span>.prototype.slice.call(ul.children);</div><div class="line">  ul.onclick = <span class="function"><span class="keyword">function</span> <span class="title">hello</span>(<span class="params">event</span>) </span>&#123;</div><div class="line">    lis.map(<span class="function"><span class="keyword">function</span>(<span class="params">cur, index, array</span>) </span>&#123;</div><div class="line">      <span class="keyword">if</span> (cur == event.target) &#123;</div><div class="line">        <span class="built_in">console</span>.log(index);</div><div class="line">      &#125;</div><div class="line">    &#125;);</div><div class="line">  &#125;;</div><div class="line">&#125;</div><div class="line">bindClick2();</div></pre></td></tr></table></figure></p>
<h3 id="至少使用两种方法写出每隔1秒输出0，1，2的函数（需包含es6的实现）"><a href="#至少使用两种方法写出每隔1秒输出0，1，2的函数（需包含es6的实现）" class="headerlink" title="至少使用两种方法写出每隔1秒输出0，1，2的函数（需包含es6的实现）"></a>至少使用两种方法写出每隔1秒输出0，1，2的函数（需包含es6的实现）</h3><p>普通情况最简单，用<code>setInterval</code>函数即可.<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a=<span class="number">0</span>;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(a++);</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> int = setInterval(<span class="string">"add()"</span>,<span class="number">1000</span>);</div><div class="line"><span class="comment">// clearInterval(int);</span></div></pre></td></tr></table></figure></p>
<p>es6里我记得有个<code>await</code>和<code>async</code>我就胡乱写了下，回来查了下:<br><code>await</code>表示紧跟在后面的表达式需要等待结果,<code>await</code>命令后面是一个 <code>Promise</code> 对象。如果不是，会被转成一个立即<code>resolve</code>的 <code>Promise</code> 对象。<br><code>await</code>关键字只能出现在用<code>async</code>声明的函数体内<br><code>async</code>函数返回一个 <code>Promise</code> 对象。<code>async</code>函数内部<code>return</code>语句返回的值，会成为<code>then</code>方法回调函数的参数。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure></p>
<h3 id="使用vue写个计时器"><a href="#使用vue写个计时器" class="headerlink" title="使用vue写个计时器"></a>使用vue写个计时器</h3><p>要求：左边input输入毫秒数，中间开始按钮可以开始和暂停，右边输入框显示倒计时的值<br>input button input</p>
<h3 id="Fibonacci-数列算法及复杂度解析"><a href="#Fibonacci-数列算法及复杂度解析" class="headerlink" title="Fibonacci 数列算法及复杂度解析"></a>Fibonacci 数列算法及复杂度解析</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">//递归调用</div><div class="line">//空间复杂度O(n^2)</div><div class="line">//时间复杂度</div><div class="line">function Fibonacci (n) &#123;</div><div class="line">  if ( n &lt;= 1 ) &#123;return 1&#125;;</div><div class="line"></div><div class="line">  return Fibonacci(n - 1) + Fibonacci(n - 2);</div><div class="line">&#125;</div><div class="line"></div><div class="line">Fibonacci(10) // 89</div><div class="line">Fibonacci(100) // 堆栈溢出</div><div class="line">Fibonacci(500) // 堆栈溢出</div><div class="line"></div><div class="line">//尾递归优化过的 Fibonacci 数列实现如下</div><div class="line">//时间复杂度</div><div class="line">//空间复杂度 O(1)</div><div class="line">function Fibonacci2 (n , ac1 = 1 , ac2 = 1) &#123;</div><div class="line">  if( n &lt;= 1 ) &#123;return ac2&#125;;</div><div class="line"></div><div class="line">  return Fibonacci2 (n - 1, ac2, ac1 + ac2);</div><div class="line">&#125;</div><div class="line"></div><div class="line">Fibonacci2(100) // 573147844013817200000</div><div class="line">Fibonacci2(1000) // 7.0330367711422765e+208</div><div class="line">Fibonacci2(10000) // Infinity</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      记录部分面试中遇到的问题
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>git仓库备份</title>
    <link href="http://www.zhuyangxing.cn/2017/03/23/git%E4%BB%93%E5%BA%93%E5%A4%87%E4%BB%BD/"/>
    <id>http://www.zhuyangxing.cn/2017/03/23/git仓库备份/</id>
    <published>2017-03-23T05:22:03.000Z</published>
    <updated>2017-06-19T05:58:43.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="git仓库备份"><a href="#git仓库备份" class="headerlink" title="git仓库备份"></a>git仓库备份</h3><p>需求很简单<br>在<code>oschina</code>上做主要的代码，在<code>coding</code>做代码备份  </p>
<ol>
<li>首先在<code>oschina</code>和<code>coding</code>上分别创建项目<code>test_git_mirroe</code></li>
<li>从<code>oschina</code>上<code>clone</code>代码<code>git clone https://git.oschina.net/openks/test_git_mirroe.git</code>  </li>
<li>跳转到项目目录<code>cd test_git_mirroe</code>  </li>
<li>添加coding的远程仓库<code>git remote add coding https://git.coding.net/zhuyangxing/test_git_mirroe.git</code>  </li>
<li>提交<code>coding</code>做镜像代码<code>git push --mirror coding</code>  </li>
<li>以后在<code>test_git_mirroe</code>上提交的代码都提交到<code>oschina</code>上  </li>
<li>想要在<code>coding</code>上同步就执行<code>git push --mirror coding</code>即可  </li>
</ol>
<h3 id="git一次提交到两个仓库"><a href="#git一次提交到两个仓库" class="headerlink" title="git一次提交到两个仓库"></a>git一次提交到两个仓库</h3><p>修改<code>.git</code>文件夹下的<code>config</code>文件<br>在<code>fetch</code>下添加想要提交的其他<code>git</code>路径即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[remote &quot;origin&quot;]</div><div class="line">&nbsp;&nbsp;url = https://git.oschina.net/openks/test_git_mirroe.git</div><div class="line">&nbsp;&nbsp;fetch = +refs/heads/*:refs/remotes/origin/*</div><div class="line">&nbsp;&nbsp;url = new git url</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      git仓库备份,  git一次提交到两个仓库解决办法
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>atom在线插件安装失败解决办法</title>
    <link href="http://www.zhuyangxing.cn/2017/03/23/atom%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85%E5%A4%B1%E8%B4%A5%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://www.zhuyangxing.cn/2017/03/23/atom插件安装失败解决办法/</id>
    <published>2017-03-23T05:16:06.000Z</published>
    <updated>2017-06-19T05:59:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>atom通过setting中无法下载插件，通过apm也无法下载插件，可能是网络、config配置的问题，不好解决。</p>
<p>下面的方法全手动，基本属于万金油方法：</p>
<p>1，在atom的setting页面中点击open config folder进入到atom的配置项目，然后我们转到该项目下的windows窗口进入package文件夹，这将是我们放置插件包的地方。</p>
<p>2，打开<a href="https://atom.io/packages浏览自己需要的插件" target="_blank" rel="external">https://atom.io/packages浏览自己需要的插件</a></p>
<p>3，选择插件中的repo,复制github地址</p>
<p>4，在步骤一的文件夹中运行<code>git bash</code>命令</p>
<p>输入以下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/emmetio/emmet-atom （将插件的源代码克隆到文件夹中）</div><div class="line">//也可以直接在github页面下载release版本的源代码 一般为zip文件 //解压到atom的package文件夹</div><div class="line">cd emmet-atom （进入插件包文件夹 即package文件夹子目录）</div><div class="line">npm install （下载，生成插件 推荐使用cnpm）</div></pre></td></tr></table></figure></p>
<p>5，重启atom 或者 <code>control + alt + R</code> 刷新atom</p>
]]></content>
    
    <summary type="html">
    
      atom在线插件安装失败解决办法即atom离线安装插件方法
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ES6新的数据类型Symbol</title>
    <link href="http://www.zhuyangxing.cn/2017/03/17/ES6%E6%96%B0%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8BSymbol/"/>
    <id>http://www.zhuyangxing.cn/2017/03/17/ES6新的数据类型Symbol/</id>
    <published>2017-03-17T05:21:35.000Z</published>
    <updated>2017-06-19T06:01:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>ES6 引入了一种新的原始数据类型Symbol，表示独一无二的值。它是 JavaScript 语言的第七种数据类型，前六种是：undefined、null、布尔值（Boolean）、字符串（String）、数值（Number）、对象（Object）</p>
<p>Symbol 值通过Symbol函数生成。生成的值是独一无二的</p>
<p>Symbol函数可以接受一个字符串作为参数，表示对 Symbol 实例的描述，主要是为了在控制台显示，或者转为字符串时，比较容易区分</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> s1 = <span class="built_in">Symbol</span>(<span class="string">'foo'</span>);</div><div class="line"><span class="keyword">var</span> s2 = <span class="built_in">Symbol</span>(<span class="string">'bar'</span>);</div><div class="line"><span class="keyword">var</span> s3 = <span class="built_in">Symbol</span>(<span class="string">'bar'</span>);</div><div class="line">s1 <span class="comment">// Symbol(foo)</span></div><div class="line">s2 <span class="comment">// Symbol(bar)</span></div><div class="line">s2==s3 <span class="comment">//false</span></div><div class="line">s1.toString() <span class="comment">// "Symbol(foo)"</span></div><div class="line">s2.toString() <span class="comment">// "Symbol(bar)"</span></div></pre></td></tr></table></figure>
<p>如果 Symbol 的参数是一个对象，就会调用该对象的toString方法，将其转为字符串，然后才生成一个 Symbol 值。</p>
<p>Symbol 值不能与其他类型的值进行运算,但是，Symbol 值可以显式转为字符串<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> sym = <span class="built_in">Symbol</span>(<span class="string">'My symbol'</span>);</div><div class="line"></div><div class="line"><span class="string">"your symbol is "</span> + sym</div><div class="line"><span class="comment">// TypeError: can't convert symbol to string</span></div><div class="line"><span class="string">`your symbol is <span class="subst">$&#123;sym&#125;</span>`</span></div><div class="line"><span class="comment">// TypeError: can't convert symbol to string</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> sym = <span class="built_in">Symbol</span>();</div><div class="line"><span class="built_in">Boolean</span>(sym) <span class="comment">// true</span></div><div class="line">!sym  <span class="comment">// false</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> (sym) &#123;</div><div class="line">  <span class="comment">// ...</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">Number</span>(sym) <span class="comment">// TypeError</span></div><div class="line">sym + <span class="number">2</span> <span class="comment">// TypeError</span></div></pre></td></tr></table></figure></p>
<p>Symbol 值作为对象属性名时，不能用点运算符，该属性还是公开属性，不是私有属性,该属性不会出现在for…in、for…of循环中，也不会被Object.keys()、Object.getOwnPropertyNames()、JSON.stringify()返回。但是，它也不是私有属性，有一个Object.getOwnPropertySymbols方法，可以获取指定对象的所有 Symbol 属性名。</p>
<p>Object.getOwnPropertySymbols方法返回一个数组，成员是当前对象的所有用作属性名的 Symbol 值。</p>
<p>Reflect.ownKeys方法可以返回所有类型的键名，包括常规键名和 Symbol 键名。</p>
<p>我们希望重新使用同一个Symbol值，Symbol.for方法可以做到这一点。它接受一个字符串作为参数，然后搜索有没有以该参数作为名称的Symbol值。如果有，就返回这个Symbol值，否则就新建并返回一个以该字符串为名称的Symbol值<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> s1 = <span class="built_in">Symbol</span>.for(<span class="string">'foo'</span>);</div><div class="line"><span class="keyword">var</span> s2 = <span class="built_in">Symbol</span>.for(<span class="string">'foo'</span>);</div><div class="line"></div><div class="line">s1 === s2 <span class="comment">// true</span></div><div class="line"><span class="built_in">Symbol</span>.for(<span class="string">"bar"</span>) === <span class="built_in">Symbol</span>.for(<span class="string">"bar"</span>)</div><div class="line"><span class="comment">// true</span></div><div class="line"></div><div class="line"><span class="built_in">Symbol</span>(<span class="string">"bar"</span>) === <span class="built_in">Symbol</span>(<span class="string">"bar"</span>)</div><div class="line"><span class="comment">// false</span></div></pre></td></tr></table></figure></p>
<p>Symbol.for()与Symbol()这两种写法，都会生成新的Symbol。它们的区别是，前者会被登记在全局环境中供搜索，后者不会。Symbol.for()不会每次调用就返回一个新的 Symbol 类型的值，而是会先检查给定的key是否已经存在，如果不存在才会新建一个值。比如，如果你调用Symbol.for(“cat”)30次，每次都会返回同一个 Symbol 值，但是调用Symbol(“cat”)30次，会返回30个不同的Symbol值。<br>Symbol.keyFor方法返回一个已登记的 Symbol 类型值的key。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> s1 = <span class="built_in">Symbol</span>.for(<span class="string">"foo"</span>);</div><div class="line"><span class="built_in">Symbol</span>.keyFor(s1) <span class="comment">// "foo"</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> s2 = <span class="built_in">Symbol</span>(<span class="string">"foo"</span>);</div><div class="line"><span class="built_in">Symbol</span>.keyFor(s2) <span class="comment">// undefined</span></div></pre></td></tr></table></figure>
<p>Symbol.for为Symbol值登记的名字，是全局环境的，可以在不同的 iframe 或 service worker 中取到同一个值<br>除了定义自己使用的Symbol值以外，ES6还提供了11个内置的Symbol值，指向语言内部使用的方法。  </p>
]]></content>
    
    <summary type="html">
    
      ES6新的数据类型Symbol了解
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Building APIs with Node.js一书阅读笔记</title>
    <link href="http://www.zhuyangxing.cn/2017/01/17/Building%20APIs%20with%20Node.js%E4%B8%80%E4%B9%A6%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
    <id>http://www.zhuyangxing.cn/2017/01/17/Building APIs with Node.js一书阅读笔记/</id>
    <published>2017-01-17T04:54:35.000Z</published>
    <updated>2017-06-19T05:58:00.000Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li><p>npm Task介绍  </p>
<p> 即package.json的script标签,可以通过npm start + scriptname 来运行  </p>
</li>
<li><p>sqlite介绍  </p>
<p>使用sqlite3作为数据库，不常用。</p>
</li>
<li><p>使用apidoc为项目的api添加api文档<br>文档写狠起来很麻烦，但是没有文档一段时间或更长时间之后用起来会更麻烦</p>
</li>
<li><p>mocha测试  </p>
</li>
<li><p>通过插件JWT(json web token)实现用户认证  </p>
<p> 例子使用了最简单的认证方式，通过用户名密码获取一个简单的token，只要用户名密码不变则该token不变，而且该token在服务器与网页间传输，安全性无法的到保证。可以启用复杂点的<code>jsonwebtoken</code>插件添加token的有效期增强安全性</p>
</li>
<li><p>通过插件compression启用gzip压缩</p>
</li>
<li><p>通过插件cors允许非本域下的请求</p>
</li>
<li><p>添加https支持</p>
</li>
<li><p>通过插件helmet增强 HTTP security</p>
</li>
<li><p>postman 测试</p>
<p>postman是强大的工具，之前有过粗略的了解，这次了解了更多，知道了变量配置和全局变量配置，这样切换环境只需修改几个变量即可立即参与测试，还可把上次测试返回数据保存到全局变量以供下次测试使用。写好测试用例后一次可以全部运行。非常方便实用</p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      粗略记录下Building APIs with Node.js 一书的部分新知识
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Building APIs with Node.js一书阅读问题汇总</title>
    <link href="http://www.zhuyangxing.cn/2017/01/06/Building%20APIs%20with%20Node.js%E4%B8%80%E4%B9%A6%E9%98%85%E8%AF%BB%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    <id>http://www.zhuyangxing.cn/2017/01/06/Building APIs with Node.js一书阅读问题汇总/</id>
    <published>2017-01-06T08:16:29.000Z</published>
    <updated>2017-01-18T07:45:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>该书地址：<a href="http://www.apress.com/cn/book/9781484224410" target="_blank" rel="external">这里</a><br>该书代码： <a href="https://github.com/caio-ribeiro-pereira/building-apis-with-nodejs" target="_blank" rel="external">这里</a></p>
<h2 id="1-安装sqlite3时出现卡主不动问题："><a href="#1-安装sqlite3时出现卡主不动问题：" class="headerlink" title="1. 安装sqlite3时出现卡主不动问题："></a>1. 安装sqlite3时出现卡主不动问题：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ npm i  sqlite3 --save</div><div class="line">&gt; sqlite3@3.1.8 install /Users/zyx/code/lean-api/ntask-api/node_modules/sqlite3</div><div class="line">&gt; node-pre-gyp install --fallback-to-build</div></pre></td></tr></table></figure>
<p>一直卡到这里不动，而加载其他npm包则没有问题。在查找错误原因时发现了 <a href="http://support.ghost.org/troubleshooting/#sqlite3-errors" target="_blank" rel="external">http://support.ghost.org/troubleshooting/#sqlite3-errors</a><br>里面有提到通过</p>
<blockquote>
<p>To get more information about what’s failing, run <code>npm install sqlite3 --loglevel=info</code>. You should then find a more detailed messages explaining   </p>
</blockquote>
<p>通过这个终于发现应该还是 GFW 的原因。<br>详细信息如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div></pre></td><td class="code"><pre><div class="line">&gt; sqlite3@3.1.8 install /Users/zyx/code/lean-api/ntask-api/node_modules/sqlite3</div><div class="line">&gt; node-pre-gyp install --fallback-to-build</div><div class="line"></div><div class="line">node-pre-gyp info it worked if it ends with ok</div><div class="line">node-pre-gyp info using node-pre-gyp@0.6.31</div><div class="line">node-pre-gyp info using node@7.3.0 | darwin | x64</div><div class="line">node-pre-gyp info check checked for &quot;/Users/zyx/code/lean-api/ntask-api/node_modules/sqlite3/lib/binding/node-v51-darwin-x64/node_sqlite3.node&quot; (not found)</div><div class="line">node-pre-gyp http GET https://mapbox-node-binary.s3.amazonaws.com/sqlite3/v3.1.8/node-v51-darwin-x64.tar.gz</div><div class="line">node-pre-gyp http 200 https://mapbox-node-binary.s3.amazonaws.com/sqlite3/v3.1.8/node-v51-darwin-x64.tar.gz</div><div class="line">node-pre-gyp info install unpacking node_sqlite3.node</div><div class="line">node-pre-gyp info tarball done parsing tarball</div><div class="line">node-pre-gyp info validate Running test command: &apos;/usr/local/bin/node --eval &apos;require(\&apos;/Users/zyx/code/lean-api/ntask-api/node_modules/sqlite3/lib/binding/node-v51-darwin-x64/node_sqlite3.node\&apos;)&apos;&apos;</div><div class="line">[sqlite3] Success: &quot;/Users/zyx/code/lean-api/ntask-api/node_modules/sqlite3/lib/binding/node-v51-darwin-x64/node_sqlite3.node&quot; is installed via remote</div><div class="line">node-pre-gyp info ok</div><div class="line">npm info lifecycle minimist@0.0.8~postinstall: minimist@0.0.8</div><div class="line">npm info lifecycle mkdirp@0.5.1~postinstall: mkdirp@0.5.1</div><div class="line">npm info lifecycle abbrev@1.0.9~postinstall: abbrev@1.0.9</div><div class="line">npm info lifecycle nopt@3.0.6~postinstall: nopt@3.0.6</div><div class="line">npm info lifecycle delegates@1.0.0~postinstall: delegates@1.0.0</div><div class="line">npm info lifecycle buffer-shims@1.0.0~postinstall: buffer-shims@1.0.0</div><div class="line">npm info lifecycle core-util-is@1.0.2~postinstall: core-util-is@1.0.2</div><div class="line">npm info lifecycle inherits@2.0.3~postinstall: inherits@2.0.3</div><div class="line">npm info lifecycle isarray@1.0.0~postinstall: isarray@1.0.0</div><div class="line">npm info lifecycle process-nextick-args@1.0.7~postinstall: process-nextick-args@1.0.7</div><div class="line">npm info lifecycle string_decoder@0.10.31~postinstall: string_decoder@0.10.31</div><div class="line">npm info lifecycle util-deprecate@1.0.2~postinstall: util-deprecate@1.0.2</div><div class="line">npm info lifecycle readable-stream@2.1.5~postinstall: readable-stream@2.1.5</div><div class="line">npm info lifecycle are-we-there-yet@1.1.2~postinstall: are-we-there-yet@1.1.2</div><div class="line">npm info lifecycle console-control-strings@1.1.0~postinstall: console-control-strings@1.1.0</div><div class="line">npm info lifecycle aproba@1.0.4~postinstall: aproba@1.0.4</div><div class="line">npm info lifecycle has-color@0.1.7~postinstall: has-color@0.1.7</div><div class="line">npm info lifecycle has-unicode@2.0.1~postinstall: has-unicode@2.0.1</div><div class="line">npm info lifecycle object-assign@4.1.0~postinstall: object-assign@4.1.0</div><div class="line">npm info lifecycle signal-exit@3.0.1~postinstall: signal-exit@3.0.1</div><div class="line">npm info lifecycle number-is-nan@1.0.1~postinstall: number-is-nan@1.0.1</div><div class="line">npm info lifecycle code-point-at@1.0.1~postinstall: code-point-at@1.0.1</div><div class="line">npm info lifecycle number-is-nan@1.0.1~postinstall: number-is-nan@1.0.1</div><div class="line">npm info lifecycle is-fullwidth-code-point@1.0.0~postinstall: is-fullwidth-code-point@1.0.0</div><div class="line">npm info lifecycle ansi-regex@2.0.0~postinstall: ansi-regex@2.0.0</div><div class="line">npm info lifecycle strip-ansi@3.0.1~postinstall: strip-ansi@3.0.1</div><div class="line">npm info lifecycle string-width@1.0.2~postinstall: string-width@1.0.2</div><div class="line">npm info lifecycle wide-align@1.1.0~postinstall: wide-align@1.1.0</div><div class="line">npm info lifecycle gauge@2.6.0~postinstall: gauge@2.6.0</div><div class="line">npm info lifecycle set-blocking@2.0.0~postinstall: set-blocking@2.0.0</div><div class="line">npm info lifecycle npmlog@4.0.0~postinstall: npmlog@4.0.0</div><div class="line">npm info lifecycle deep-extend@0.4.1~postinstall: deep-extend@0.4.1</div><div class="line">npm info lifecycle ini@1.3.4~postinstall: ini@1.3.4</div><div class="line">npm info lifecycle minimist@1.2.0~postinstall: minimist@1.2.0</div><div class="line">npm info lifecycle strip-json-comments@1.0.4~postinstall: strip-json-comments@1.0.4</div><div class="line">npm info lifecycle rc@1.1.6~postinstall: rc@1.1.6</div><div class="line">npm info lifecycle aws-sign2@0.6.0~postinstall: aws-sign2@0.6.0</div><div class="line">npm info lifecycle aws4@1.5.0~postinstall: aws4@1.5.0</div><div class="line">npm info lifecycle caseless@0.11.0~postinstall: caseless@0.11.0</div><div class="line">npm info lifecycle delayed-stream@1.0.0~postinstall: delayed-stream@1.0.0</div><div class="line">npm info lifecycle combined-stream@1.0.5~postinstall: combined-stream@1.0.5</div><div class="line">npm info lifecycle extend@3.0.0~postinstall: extend@3.0.0</div><div class="line">npm info lifecycle forever-agent@0.6.1~postinstall: forever-agent@0.6.1</div><div class="line">npm info lifecycle asynckit@0.4.0~postinstall: asynckit@0.4.0</div><div class="line">npm info lifecycle ansi-styles@2.2.1~postinstall: ansi-styles@2.2.1</div><div class="line">npm info lifecycle escape-string-regexp@1.0.5~postinstall: escape-string-regexp@1.0.5</div><div class="line">npm info lifecycle ansi-regex@2.0.0~postinstall: ansi-regex@2.0.0</div><div class="line">npm info lifecycle has-ansi@2.0.0~postinstall: has-ansi@2.0.0</div><div class="line">npm info lifecycle ansi-regex@2.0.0~postinstall: ansi-regex@2.0.0</div><div class="line">npm info lifecycle strip-ansi@3.0.1~postinstall: strip-ansi@3.0.1</div><div class="line">npm info lifecycle supports-color@2.0.0~postinstall: supports-color@2.0.0</div><div class="line">npm info lifecycle chalk@1.1.3~postinstall: chalk@1.1.3</div><div class="line">npm info lifecycle graceful-readlink@1.0.1~postinstall: graceful-readlink@1.0.1</div><div class="line">npm info lifecycle commander@2.9.0~postinstall: commander@2.9.0</div><div class="line">npm info lifecycle generate-function@2.0.0~postinstall: generate-function@2.0.0</div><div class="line">npm info lifecycle is-property@1.0.2~postinstall: is-property@1.0.2</div><div class="line">npm info lifecycle generate-object-property@1.2.0~postinstall: generate-object-property@1.2.0</div><div class="line">npm info lifecycle jsonpointer@4.0.0~postinstall: jsonpointer@4.0.0</div><div class="line">npm info lifecycle xtend@4.0.1~postinstall: xtend@4.0.1</div><div class="line">npm info lifecycle is-my-json-valid@2.15.0~postinstall: is-my-json-valid@2.15.0</div><div class="line">npm info lifecycle pinkie@2.0.4~postinstall: pinkie@2.0.4</div><div class="line">npm info lifecycle pinkie-promise@2.0.1~postinstall: pinkie-promise@2.0.1</div><div class="line">npm info lifecycle har-validator@2.0.6~postinstall: har-validator@2.0.6</div><div class="line">npm info lifecycle hoek@2.16.3~postinstall: hoek@2.16.3</div><div class="line">npm info lifecycle boom@2.10.1~postinstall: boom@2.10.1</div><div class="line">npm info lifecycle cryptiles@2.0.5~postinstall: cryptiles@2.0.5</div><div class="line">npm info lifecycle sntp@1.0.9~postinstall: sntp@1.0.9</div><div class="line">npm info lifecycle hawk@3.1.3~postinstall: hawk@3.1.3</div><div class="line">npm info lifecycle assert-plus@0.2.0~postinstall: assert-plus@0.2.0</div><div class="line">npm info lifecycle extsprintf@1.0.2~postinstall: extsprintf@1.0.2</div><div class="line">npm info lifecycle json-schema@0.2.3~postinstall: json-schema@0.2.3</div><div class="line">npm info lifecycle verror@1.3.6~postinstall: verror@1.3.6</div><div class="line">npm info lifecycle jsprim@1.3.1~postinstall: jsprim@1.3.1</div><div class="line">npm info lifecycle asn1@0.2.3~postinstall: asn1@0.2.3</div><div class="line">npm info lifecycle assert-plus@1.0.0~postinstall: assert-plus@1.0.0</div><div class="line">npm info lifecycle dashdash@1.14.0~postinstall: dashdash@1.14.0</div><div class="line">npm info lifecycle getpass@0.1.6~postinstall: getpass@0.1.6</div><div class="line">npm info lifecycle jsbn@0.1.0~postinstall: jsbn@0.1.0</div><div class="line">npm info lifecycle ecc-jsbn@0.1.1~postinstall: ecc-jsbn@0.1.1</div><div class="line">npm info lifecycle jodid25519@1.0.2~postinstall: jodid25519@1.0.2</div><div class="line">npm info lifecycle tweetnacl@0.14.3~postinstall: tweetnacl@0.14.3</div><div class="line">npm info lifecycle bcrypt-pbkdf@1.0.0~postinstall: bcrypt-pbkdf@1.0.0</div><div class="line">npm info lifecycle sshpk@1.10.1~postinstall: sshpk@1.10.1</div><div class="line">npm info lifecycle http-signature@1.1.1~postinstall: http-signature@1.1.1</div><div class="line">npm info lifecycle is-typedarray@1.0.0~postinstall: is-typedarray@1.0.0</div><div class="line">npm info lifecycle isstream@0.1.2~postinstall: isstream@0.1.2</div><div class="line">npm info lifecycle json-stringify-safe@5.0.1~postinstall: json-stringify-safe@5.0.1</div><div class="line">npm info lifecycle mime-db@1.24.0~postinstall: mime-db@1.24.0</div><div class="line">npm info lifecycle mime-types@2.1.12~postinstall: mime-types@2.1.12</div><div class="line">npm info lifecycle form-data@2.1.1~postinstall: form-data@2.1.1</div><div class="line">npm info lifecycle node-uuid@1.4.7~postinstall: node-uuid@1.4.7</div><div class="line">npm info lifecycle oauth-sign@0.8.2~postinstall: oauth-sign@0.8.2</div><div class="line">npm info lifecycle qs@6.3.0~postinstall: qs@6.3.0</div><div class="line">npm info lifecycle stringstream@0.0.5~postinstall: stringstream@0.0.5</div><div class="line">npm info lifecycle punycode@1.4.1~postinstall: punycode@1.4.1</div><div class="line">npm info lifecycle tough-cookie@2.3.2~postinstall: tough-cookie@2.3.2</div><div class="line">npm info lifecycle tunnel-agent@0.4.3~postinstall: tunnel-agent@0.4.3</div><div class="line">npm info lifecycle request@2.76.0~postinstall: request@2.76.0</div><div class="line">npm info lifecycle fs.realpath@1.0.0~postinstall: fs.realpath@1.0.0</div><div class="line">npm info lifecycle wrappy@1.0.2~postinstall: wrappy@1.0.2</div><div class="line">npm info lifecycle inherits@2.0.3~postinstall: inherits@2.0.3</div><div class="line">npm info lifecycle balanced-match@0.4.2~postinstall: balanced-match@0.4.2</div><div class="line">npm info lifecycle concat-map@0.0.1~postinstall: concat-map@0.0.1</div><div class="line">npm info lifecycle brace-expansion@1.1.6~postinstall: brace-expansion@1.1.6</div><div class="line">npm info lifecycle minimatch@3.0.3~postinstall: minimatch@3.0.3</div><div class="line">npm info lifecycle wrappy@1.0.2~postinstall: wrappy@1.0.2</div><div class="line">npm info lifecycle once@1.4.0~postinstall: once@1.4.0</div><div class="line">npm info lifecycle inflight@1.0.6~postinstall: inflight@1.0.6</div><div class="line">npm info lifecycle path-is-absolute@1.0.1~postinstall: path-is-absolute@1.0.1</div><div class="line">npm info lifecycle glob@7.1.1~postinstall: glob@7.1.1</div><div class="line">npm info lifecycle rimraf@2.5.4~postinstall: rimraf@2.5.4</div><div class="line">npm info lifecycle semver@5.3.0~postinstall: semver@5.3.0</div><div class="line">npm info lifecycle ms@0.7.1~postinstall: ms@0.7.1</div><div class="line">npm info lifecycle debug@2.2.0~postinstall: debug@2.2.0</div><div class="line">npm info lifecycle inherits@2.0.3~postinstall: inherits@2.0.3</div><div class="line">npm info lifecycle balanced-match@0.4.2~postinstall: balanced-match@0.4.2</div><div class="line">npm info lifecycle concat-map@0.0.1~postinstall: concat-map@0.0.1</div><div class="line">npm info lifecycle brace-expansion@1.1.6~postinstall: brace-expansion@1.1.6</div><div class="line">npm info lifecycle minimatch@3.0.3~postinstall: minimatch@3.0.3</div><div class="line">npm info lifecycle graceful-fs@4.1.9~postinstall: graceful-fs@4.1.9</div><div class="line">npm info lifecycle inherits@2.0.3~postinstall: inherits@2.0.3</div><div class="line">npm info lifecycle fstream@1.0.10~postinstall: fstream@1.0.10</div><div class="line">npm info lifecycle fstream-ignore@1.0.5~postinstall: fstream-ignore@1.0.5</div><div class="line">npm info lifecycle wrappy@1.0.2~postinstall: wrappy@1.0.2</div><div class="line">npm info lifecycle once@1.3.3~postinstall: once@1.3.3</div><div class="line">npm info lifecycle buffer-shims@1.0.0~postinstall: buffer-shims@1.0.0</div><div class="line">npm info lifecycle core-util-is@1.0.2~postinstall: core-util-is@1.0.2</div><div class="line">npm info lifecycle inherits@2.0.3~postinstall: inherits@2.0.3</div><div class="line">npm info lifecycle isarray@1.0.0~postinstall: isarray@1.0.0</div><div class="line">npm info lifecycle process-nextick-args@1.0.7~postinstall: process-nextick-args@1.0.7</div><div class="line">npm info lifecycle string_decoder@0.10.31~postinstall: string_decoder@0.10.31</div><div class="line">npm info lifecycle util-deprecate@1.0.2~postinstall: util-deprecate@1.0.2</div><div class="line">npm info lifecycle readable-stream@2.1.5~postinstall: readable-stream@2.1.5</div><div class="line">npm info lifecycle uid-number@0.0.6~postinstall: uid-number@0.0.6</div><div class="line">npm info lifecycle graceful-fs@4.1.9~postinstall: graceful-fs@4.1.9</div><div class="line">npm info lifecycle inherits@2.0.3~postinstall: inherits@2.0.3</div><div class="line">npm info lifecycle block-stream@0.0.9~postinstall: block-stream@0.0.9</div><div class="line">npm info lifecycle fstream@1.0.10~postinstall: fstream@1.0.10</div><div class="line">npm info lifecycle tar@2.2.1~postinstall: tar@2.2.1</div><div class="line">npm info lifecycle tar-pack@3.3.0~postinstall: tar-pack@3.3.0</div><div class="line">npm info lifecycle nan@2.4.0~postinstall: nan@2.4.0</div><div class="line">npm info lifecycle node-pre-gyp@0.6.31~postinstall: node-pre-gyp@0.6.31</div><div class="line">npm info lifecycle sqlite3@3.1.8~postinstall: sqlite3@3.1.8</div><div class="line">ntask-api@1.0.0 /Users/zyx/code/lean-api/ntask-api</div><div class="line">└─┬ sqlite3@3.1.8</div><div class="line">  ├── nan@2.4.0</div><div class="line">  └─┬ node-pre-gyp@0.6.31</div><div class="line">    ├─┬ mkdirp@0.5.1</div><div class="line">    │ └── minimist@0.0.8</div><div class="line">    ├─┬ nopt@3.0.6</div><div class="line">    │ └── abbrev@1.0.9</div><div class="line">    ├─┬ npmlog@4.0.0</div><div class="line">    │ ├─┬ are-we-there-yet@1.1.2</div><div class="line">    │ │ ├── delegates@1.0.0</div><div class="line">    │ │ └─┬ readable-stream@2.1.5</div><div class="line">    │ │   ├── buffer-shims@1.0.0</div><div class="line">    │ │   ├── core-util-is@1.0.2</div><div class="line">    │ │   ├── inherits@2.0.3</div><div class="line">    │ │   ├── isarray@1.0.0</div><div class="line">    │ │   ├── process-nextick-args@1.0.7</div><div class="line">    │ │   ├── string_decoder@0.10.31</div><div class="line">    │ │   └── util-deprecate@1.0.2</div><div class="line">    │ ├── console-control-strings@1.1.0</div><div class="line">    │ ├─┬ gauge@2.6.0</div><div class="line">    │ │ ├── aproba@1.0.4</div><div class="line">    │ │ ├── has-color@0.1.7</div><div class="line">    │ │ ├── has-unicode@2.0.1</div><div class="line">    │ │ ├── object-assign@4.1.0</div><div class="line">    │ │ ├── signal-exit@3.0.1</div><div class="line">    │ │ ├─┬ string-width@1.0.2</div><div class="line">    │ │ │ ├─┬ code-point-at@1.0.1</div><div class="line">    │ │ │ │ └── number-is-nan@1.0.1</div><div class="line">    │ │ │ └─┬ is-fullwidth-code-point@1.0.0</div><div class="line">    │ │ │   └── number-is-nan@1.0.1</div><div class="line">    │ │ ├─┬ strip-ansi@3.0.1</div><div class="line">    │ │ │ └── ansi-regex@2.0.0</div><div class="line">    │ │ └── wide-align@1.1.0</div><div class="line">    │ └── set-blocking@2.0.0</div><div class="line">    ├─┬ rc@1.1.6</div><div class="line">    │ ├── deep-extend@0.4.1</div><div class="line">    │ ├── ini@1.3.4</div><div class="line">    │ ├── minimist@1.2.0</div><div class="line">    │ └── strip-json-comments@1.0.4</div><div class="line">    ├─┬ request@2.76.0</div><div class="line">    │ ├── aws-sign2@0.6.0</div><div class="line">    │ ├── aws4@1.5.0</div><div class="line">    │ ├── caseless@0.11.0</div><div class="line">    │ ├─┬ combined-stream@1.0.5</div><div class="line">    │ │ └── delayed-stream@1.0.0</div><div class="line">    │ ├── extend@3.0.0</div><div class="line">    │ ├── forever-agent@0.6.1</div><div class="line">    │ ├─┬ form-data@2.1.1</div><div class="line">    │ │ └── asynckit@0.4.0</div><div class="line">    │ ├─┬ har-validator@2.0.6</div><div class="line">    │ │ ├─┬ chalk@1.1.3</div><div class="line">    │ │ │ ├── ansi-styles@2.2.1</div><div class="line">    │ │ │ ├── escape-string-regexp@1.0.5</div><div class="line">    │ │ │ ├─┬ has-ansi@2.0.0</div><div class="line">    │ │ │ │ └── ansi-regex@2.0.0</div><div class="line">    │ │ │ ├─┬ strip-ansi@3.0.1</div><div class="line">    │ │ │ │ └── ansi-regex@2.0.0</div><div class="line">    │ │ │ └── supports-color@2.0.0</div><div class="line">    │ │ ├─┬ commander@2.9.0</div><div class="line">    │ │ │ └── graceful-readlink@1.0.1</div><div class="line">    │ │ ├─┬ is-my-json-valid@2.15.0</div><div class="line">    │ │ │ ├── generate-function@2.0.0</div><div class="line">    │ │ │ ├─┬ generate-object-property@1.2.0</div><div class="line">    │ │ │ │ └── is-property@1.0.2</div><div class="line">    │ │ │ ├── jsonpointer@4.0.0</div><div class="line">    │ │ │ └── xtend@4.0.1</div><div class="line">    │ │ └─┬ pinkie-promise@2.0.1</div><div class="line">    │ │   └── pinkie@2.0.4</div><div class="line">    │ ├─┬ hawk@3.1.3</div><div class="line">    │ │ ├── boom@2.10.1</div><div class="line">    │ │ ├── cryptiles@2.0.5</div><div class="line">    │ │ ├── hoek@2.16.3</div><div class="line">    │ │ └── sntp@1.0.9</div><div class="line">    │ ├─┬ http-signature@1.1.1</div><div class="line">    │ │ ├── assert-plus@0.2.0</div><div class="line">    │ │ ├─┬ jsprim@1.3.1</div><div class="line">    │ │ │ ├── extsprintf@1.0.2</div><div class="line">    │ │ │ ├── json-schema@0.2.3</div><div class="line">    │ │ │ └── verror@1.3.6</div><div class="line">    │ │ └─┬ sshpk@1.10.1</div><div class="line">    │ │   ├── asn1@0.2.3</div><div class="line">    │ │   ├── assert-plus@1.0.0</div><div class="line">    │ │   ├── bcrypt-pbkdf@1.0.0</div><div class="line">    │ │   ├── dashdash@1.14.0</div><div class="line">    │ │   ├── ecc-jsbn@0.1.1</div><div class="line">    │ │   ├── getpass@0.1.6</div><div class="line">    │ │   ├── jodid25519@1.0.2</div><div class="line">    │ │   ├── jsbn@0.1.0</div><div class="line">    │ │   └── tweetnacl@0.14.3</div><div class="line">    │ ├── is-typedarray@1.0.0</div><div class="line">    │ ├── isstream@0.1.2</div><div class="line">    │ ├── json-stringify-safe@5.0.1</div><div class="line">    │ ├─┬ mime-types@2.1.12</div><div class="line">    │ │ └── mime-db@1.24.0</div><div class="line">    │ ├── node-uuid@1.4.7</div><div class="line">    │ ├── oauth-sign@0.8.2</div><div class="line">    │ ├── qs@6.3.0</div><div class="line">    │ ├── stringstream@0.0.5</div><div class="line">    │ ├─┬ tough-cookie@2.3.2</div><div class="line">    │ │ └── punycode@1.4.1</div><div class="line">    │ └── tunnel-agent@0.4.3</div><div class="line">    ├─┬ rimraf@2.5.4</div><div class="line">    │ └─┬ glob@7.1.1</div><div class="line">    │   ├── fs.realpath@1.0.0</div><div class="line">    │   ├─┬ inflight@1.0.6</div><div class="line">    │   │ └── wrappy@1.0.2</div><div class="line">    │   ├── inherits@2.0.3</div><div class="line">    │   ├─┬ minimatch@3.0.3</div><div class="line">    │   │ └─┬ brace-expansion@1.1.6</div><div class="line">    │   │   ├── balanced-match@0.4.2</div><div class="line">    │   │   └── concat-map@0.0.1</div><div class="line">    │   ├─┬ once@1.4.0</div><div class="line">    │   │ └── wrappy@1.0.2</div><div class="line">    │   └── path-is-absolute@1.0.1</div><div class="line">    ├── semver@5.3.0</div><div class="line">    ├─┬ tar@2.2.1</div><div class="line">    │ ├── block-stream@0.0.9</div><div class="line">    │ ├─┬ fstream@1.0.10</div><div class="line">    │ │ └── graceful-fs@4.1.9</div><div class="line">    │ └── inherits@2.0.3</div><div class="line">    └─┬ tar-pack@3.3.0</div><div class="line">      ├─┬ debug@2.2.0</div><div class="line">      │ └── ms@0.7.1</div><div class="line">      ├─┬ fstream@1.0.10</div><div class="line">      │ ├── graceful-fs@4.1.9</div><div class="line">      │ └── inherits@2.0.3</div><div class="line">      ├─┬ fstream-ignore@1.0.5</div><div class="line">      │ ├── inherits@2.0.3</div><div class="line">      │ └─┬ minimatch@3.0.3</div><div class="line">      │   └─┬ brace-expansion@1.1.6</div><div class="line">      │     ├── balanced-match@0.4.2</div><div class="line">      │     └── concat-map@0.0.1</div><div class="line">      ├─┬ once@1.3.3</div><div class="line">      │ └── wrappy@1.0.2</div><div class="line">      ├─┬ readable-stream@2.1.5</div><div class="line">      │ ├── buffer-shims@1.0.0</div><div class="line">      │ ├── core-util-is@1.0.2</div><div class="line">      │ ├── inherits@2.0.3</div><div class="line">      │ ├── isarray@1.0.0</div><div class="line">      │ ├── process-nextick-args@1.0.7</div><div class="line">      │ ├── string_decoder@0.10.31</div><div class="line">      │ └── util-deprecate@1.0.2</div><div class="line">      └── uid-number@0.0.6</div><div class="line"></div><div class="line">npm WARN ntask-api@1.0.0 No description</div><div class="line">npm WARN ntask-api@1.0.0 No repository field.</div><div class="line">npm info ok</div></pre></td></tr></table></figure></p>
<h2 id="2-安装bcrypt包问题-Error-bcrypt-0-8-7-install-node-gyp-rebuild"><a href="#2-安装bcrypt包问题-Error-bcrypt-0-8-7-install-node-gyp-rebuild" class="headerlink" title="2.安装bcrypt包问题 Error: bcrypt@0.8.7 install: node-gyp rebuild"></a>2.安装bcrypt包问题 Error: bcrypt@0.8.7 install: <code>node-gyp rebuild</code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Agreeing to the Xcode/iOS license requires admin privileges, please re-run as root via sudo.</div><div class="line">Agreeing to the Xcode/iOS license requires admin privileges, please re-run as root via sudo.</div></pre></td></tr></table></figure>
<p>解决方法如下：</p>
<blockquote>
<p>this generally occurs after the mac OS update. All you need to do in terminal is run <code>sudo xcodebuild -license</code> and then agree to the terms. and then <code>npm install</code> is ok</p>
</blockquote>
<p><a href="http://stackoverflow.com/questions/32720476/agreeing-to-the-xcode-ios-license-requires-admin-privileges-please-re-run-as-ro" target="_blank" rel="external">key about the solution</a></p>
]]></content>
    
    <summary type="html">
    
      Building APIs with Node.js 遇到问题汇总
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>工作中遇到的部分问题</title>
    <link href="http://www.zhuyangxing.cn/2016/11/19/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%83%A8%E5%88%86%E9%97%AE%E9%A2%98/"/>
    <id>http://www.zhuyangxing.cn/2016/11/19/工作中遇到的部分问题/</id>
    <published>2016-11-19T12:24:58.000Z</published>
    <updated>2017-01-18T07:41:57.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="js在浏览器里无法正常运行"><a href="#js在浏览器里无法正常运行" class="headerlink" title="js在浏览器里无法正常运行"></a>js在浏览器里无法正常运行</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> d1= <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">"2016-6-6"</span>);</div><div class="line">alert(d1);</div><div class="line"><span class="comment">//chrome及模拟器返回值：Mon Jun 06 2016 00:00:00 GMT+0800 (中国标准时间)</span></div><div class="line"><span class="comment">//ios返回值： Invalid Date</span></div><div class="line"></div><div class="line"><span class="comment">//for of 为es6的内容，手误将for in 写成了for of</span></div><div class="line"><span class="comment">//为了这个问题查找了半天,部分浏览器还不支持for of chrome测试没问题</span></div><div class="line"><span class="comment">//for(index in arr),for(value of arr)</span></div><div class="line"><span class="keyword">var</span> arr=[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>],str=<span class="string">""</span>;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> arr)&#123;</div><div class="line">    str+=arr[i]);</div><div class="line">&#125;</div><div class="line">alert(<span class="string">"---hello----"</span>);</div><div class="line">alert(str);</div></pre></td></tr></table></figure>
<h3 id="margin-bottom在ios里不起作用"><a href="#margin-bottom在ios里不起作用" class="headerlink" title="margin-bottom在ios里不起作用"></a><code>margin-bottom</code>在ios里不起作用</h3><p>详细问题描述：<br>在<code>html</code>设置高度为100%的前提下,<code>body</code>的子元素设置<code>margin-bottom</code>不起作用,如果页面够长则直接贴着页面的最下方<br>解决办法：<br>1.在该元素的外层包一个外层容器,让该元素的<code>margin-bottom</code>把外层元素撑起来就可以了。<br>2.要么就是去掉<code>html</code>上的<code>100%</code></p>
]]></content>
    
    <summary type="html">
    
      记录部分工作中遇到的问题
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>git常用命令</title>
    <link href="http://www.zhuyangxing.cn/2016/11/17/GIT%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.zhuyangxing.cn/2016/11/17/GIT常用命令/</id>
    <published>2016-11-17T05:21:35.000Z</published>
    <updated>2017-01-18T08:21:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="git-log-命令"><a href="#git-log-命令" class="headerlink" title="git log 命令"></a>git log 命令</h2><h4 id="git-log-n"><a href="#git-log-n" class="headerlink" title="git log -n"></a>git log -n</h4><p>显示前N条日志</p>
<h4 id="git-log-–stat-n"><a href="#git-log-–stat-n" class="headerlink" title="git log –stat -n"></a>git log –stat -n</h4><p>显示简要的增改行数统计,每次提交文件的变更统计</p>
<h4 id="git-log-–pretty-format-”-“"><a href="#git-log-–pretty-format-”-“" class="headerlink" title="git log –pretty=format:” “"></a>git log –pretty=format:” “</h4><table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>%H</td>
<td>提交对象（commit）的完整哈希字串   </td>
</tr>
<tr>
<td>%h</td>
<td>提交对象的简短哈希字串  </td>
</tr>
<tr>
<td>%T</td>
<td>树对象（tree）的完整哈希字串  </td>
</tr>
<tr>
<td>%t</td>
<td>树对象的简短哈希字串  </td>
</tr>
<tr>
<td>%P</td>
<td>父对象（parent）的完整哈希字串  </td>
</tr>
<tr>
<td>%p</td>
<td>父对象的简短哈希字串  </td>
</tr>
<tr>
<td>%an</td>
<td>作者（author）的名字  </td>
</tr>
<tr>
<td>%ae</td>
<td>作者的电子邮件地址  </td>
</tr>
<tr>
<td>%ad</td>
<td>作者修订日期（可以用 -date= 选项定制格式）  </td>
</tr>
<tr>
<td>%ar</td>
<td>作者修订日期，按多久以前的方式显示  </td>
</tr>
<tr>
<td>%cn</td>
<td>提交者(committer)的名字  </td>
</tr>
<tr>
<td>%ce</td>
<td>提交者的电子邮件地址  </td>
</tr>
<tr>
<td>%cd</td>
<td>提交日期  </td>
</tr>
<tr>
<td>%cr</td>
<td>提交日期，按多久以前的方式显示  </td>
</tr>
<tr>
<td>%s</td>
<td>提交说明  </td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">git log --pretty=format:&quot; %s&quot; -3</div><div class="line">test:add new question add question6</div><div class="line">test:add new question add question5</div><div class="line">test:add new question</div><div class="line">//命令好用，起个别名</div><div class="line">git config alias.logs &quot;log --pretty=format:&apos;%s&apos;&quot;</div><div class="line">// 以后就可以使用如下命令，命令结果和上面一条命令结果一样</div><div class="line">git logs -3</div><div class="line">// 某些文件或某个文件的最近3次记录</div><div class="line">git logs -3  static/*.html</div><div class="line">// 指定作者为&quot;BeginMan&quot;的所有提交</div><div class="line">git log --author=BeginMan</div><div class="line">// 指定关键字为“init”的所有提交</div><div class="line">git log --grep=init</div><div class="line">// 指定提交者为&quot;Jack&quot;的所有提交</div><div class="line">git log --committer=Jack</div><div class="line"></div><div class="line">//查看文件的修改记录 可以看到提交版本</div><div class="line">git log demo/js/propagation.js</div><div class="line">commit bdbcf6226b05207fc4d4a6b56ab566ff0744295e</div><div class="line">//回退到指定版本</div><div class="line">git reset bdbcf6226b05207fc4d4a6b56ab566ff0744295e demo/js/propagation.js</div></pre></td></tr></table></figure>
<h2 id="git-Commit-message"><a href="#git-Commit-message" class="headerlink" title="git Commit message"></a>git Commit message</h2><p>Commit message 都包括三个部分：Header，Body 和 Footer。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;</div><div class="line">// 空一行</div><div class="line">&lt;body&gt;</div><div class="line">// 空一行</div><div class="line">&lt;footer&gt;</div></pre></td></tr></table></figure></p>
<p> Header部分只有一行，包括三个字段：type（必需）、scope（可选）和subject（必需）</p>
<table>
<thead>
<tr>
<th>type</th>
<th>意义</th>
</tr>
</thead>
<tbody>
<tr>
<td>feat</td>
<td>新功能（feature）</td>
</tr>
<tr>
<td>fix</td>
<td>修补bug  </td>
</tr>
<tr>
<td>docs</td>
<td>文档（documentation）  </td>
</tr>
<tr>
<td>style</td>
<td>格式（不影响代码运行的变动）  </td>
</tr>
<tr>
<td>refactor</td>
<td>重构（即不是新增功能，也不是修改bug的代码变动）  </td>
</tr>
<tr>
<td>test</td>
<td>增加测试  </td>
</tr>
<tr>
<td>chore</td>
<td>构建过程或辅助工具的变动  </td>
</tr>
</tbody>
</table>
<p>scope用于说明 commit 影响的范围，比如数据层、控制层、视图层等等，视项目不同而不同。</p>
<p>subject是 commit 目的的简短描述，不超过50个字符。</p>
<blockquote>
<p>以动词开头，使用第一人称现在时，比如change，而不是changed或changes<br>第一个字母小写<br>结尾不加句号（.）  </p>
</blockquote>
<p>总结：<code>commit message应包含type+&quot;:&quot;+subject</code></p>
<h2 id="git-issues"><a href="#git-issues" class="headerlink" title="git issues"></a>git issues</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">// 关闭一个</div><div class="line">Closes #234</div><div class="line">// 关闭多个issue</div><div class="line">Closes #123, #245, #992</div></pre></td></tr></table></figure>
<h2 id="git-branch"><a href="#git-branch" class="headerlink" title="git branch"></a>git branch</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">查看所有分支(前面带*号的代表你当前工作目录所处的分支)</div><div class="line">git branch -a  </div><div class="line"></div><div class="line"></div><div class="line">创建test分支</div><div class="line">git branch test  </div><div class="line"></div><div class="line">切换到test分支</div><div class="line">git checkout test  </div><div class="line"></div><div class="line">删除本地test分支</div><div class="line">git branch -d test</div><div class="line"></div><div class="line">删除远程test分支</div><div class="line">git push origin --delete test</div><div class="line"></div><div class="line">合并分支(把test分支合并到master分支上)</div><div class="line">git checkout master</div><div class="line">git merge test</div><div class="line"></div><div class="line">把当前test分支提交到远程test分支</div><div class="line">git push origin test</div><div class="line"></div><div class="line">把本地所有分支提交到远程相对应的分支上</div><div class="line">git push</div><div class="line"></div><div class="line"></div><div class="line">//复制代码库到本地</div><div class="line">git clone http://192.168.1.231/group-two/jujusports-web.git</div><div class="line"></div><div class="line">//添加所有未添加的文件</div><div class="line">git add .</div><div class="line"></div><div class="line"></div><div class="line">//查看版本区别只显示文件名字</div><div class="line">git diff --name-only</div><div class="line"></div><div class="line">//git 查看某版本文件</div><div class="line">//git show 版本号 文件名</div><div class="line">git show 33e636914bf61536fe56d3872338f0087c1a1e5c static/order_undone.html</div><div class="line"></div><div class="line">//刚创建git需要添加分支</div><div class="line">git push -u origin master</div><div class="line"></div><div class="line">//git撤销用branch上代码覆盖本地仓库及本地工程</div><div class="line">git checkout routes/index.js</div><div class="line"></div><div class="line">git reset [--hard|soft|mixed|merge|keep]</div><div class="line">/*</div><div class="line">[&lt;commit&gt;或HEAD]：将当前的分支重设（reset）到指定的&lt;commit&gt;或者HEAD（默认，如果不显示指定commit，默认是HEAD，即最新的一次提交），并且根据[mode]有可能更新index和working directory。mode的取值可以是hard、soft、mixed、merged、keep。下面来详细说明每种模式的意义和效果。</div><div class="line">A). --hard：重设（reset） index和working directory，自从&lt;commit&gt;以来在working directory中的任何改变都被丢弃，并把HEAD指向&lt;commit&gt;。</div><div class="line">B). --soft：index和working directory中的内容不作任何改变，仅仅把HEAD指向&lt;commit&gt;。这个模式的效果是，执行完毕后，自从&lt;commit&gt;以来的所有改变都会显示在git status的"Changes to be committed"中。</div><div class="line">C).  --mixed：仅reset index，但是不reset working directory。这个模式是默认模式，即当不显示告知git reset模式时，会使用mixed模式。这个模式的效果是，working directory中文件的修改都会被保留，不会丢弃，但是也不会被标记成"Changes to be committed"，但是会打出什么还未被更新的报告。报告如下：</div><div class="line">引用</div><div class="line">Unstaged changes after reset:</div><div class="line">M Test.Scala</div><div class="line">M test.txt</div><div class="line">*/</div></pre></td></tr></table></figure>
<h2 id="git-config"><a href="#git-config" class="headerlink" title="git config"></a>git config</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">git config --global user.name  openks</div><div class="line">git config --global user.email  zhuyangxing@foxmail.com</div><div class="line">//显示所有配置</div><div class="line">git config --list</div><div class="line">//保存git的用户名密码</div><div class="line">git config --global credential.helper store</div></pre></td></tr></table></figure>
<p><a href="http://note.youdao.com/yws/public/redirect/share?id=5f785b0976e591a76c962e0624feec5a&amp;type=false" target="_blank" rel="external">有道分享</a></p>
]]></content>
    
    <summary type="html">
    
      git常用命令记录
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>mongodb相关内容学习</title>
    <link href="http://www.zhuyangxing.cn/2016/11/17/mongodb%E7%9B%B8%E5%85%B3%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0/"/>
    <id>http://www.zhuyangxing.cn/2016/11/17/mongodb相关内容学习/</id>
    <published>2016-11-17T05:21:35.000Z</published>
    <updated>2017-06-19T06:00:01.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="windows下安装mongodb"><a href="#windows下安装mongodb" class="headerlink" title="windows下安装mongodb"></a>windows下安装mongodb</h3><p>下载exe文件并安装<br>创建数据库文件的存放位置，比如<code>f:/mongodb/data/db</code>。<br>启动mongodb服务之前需要必须创建数据库文件的存放文件夹，否则命令不会自动创建，而且不能启动成功。</p>
<p>进入mongodb安装文件的bin目录（默认：<code>C:\Program Files\MongoDB\Server\3.0\bin</code>），<br>输入如下的命令设置mongoDB的dbpath：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mongod --dbpath f:\mongodb\data\db</div></pre></td></tr></table></figure></p>
<p>打开<a href="http://localhost:27017" target="_blank" rel="external">http://localhost:27017</a>查看是否启动成功</p>
<p>为了以后不用每次都添加<code>--dbpath</code>参数,需做如下设置<br>在<code>f:\mongodb</code>新建文件<code>mongo.config</code>并填写内容如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">dbpath=f:\mongodb\data\db</div><div class="line">logpath=f:\mongodb\log\mongo.log</div></pre></td></tr></table></figure></p>
<p>进入mongodb安装文件的bin目录，输入如下的命令添加mongodb配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mongod --config F:\mongodb\mongo.config</div></pre></td></tr></table></figure></p>
<p>如果发现新生成日志文件则表示配置成功。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//安装windows服务</span></div><div class="line">mongod --config f:\mongodb\mongo.config -install -serviceName <span class="string">"MongoDB"</span></div><div class="line"></div><div class="line"><span class="comment">//在win10上安装出现如下错误提示 log里看到的(服务安装却不显示成功)</span></div><div class="line"><span class="number">2017</span><span class="number">-03</span><span class="number">-02</span>T11:<span class="number">41</span>:<span class="number">12.460</span>+<span class="number">0800</span> I CONTROL  [main] Trying to install Windows service <span class="string">'MongoDB'</span></div><div class="line"><span class="number">2017</span><span class="number">-03</span><span class="number">-02</span>T11:<span class="number">41</span>:<span class="number">12.460</span>+<span class="number">0800</span> I CONTROL  [main] <span class="built_in">Error</span> connecting to the Service Control Manager: 拒绝访问。 (<span class="number">5</span>)</div><div class="line"><span class="comment">//解决办法</span></div><div class="line"><span class="comment">//是因为你在cmd下没有权限所致</span></div><div class="line"><span class="comment">//以管理员身份（win+x，然后A键）启动cmd以后</span></div><div class="line"><span class="comment">//再执行你原来的命令就没问题了。</span></div><div class="line"></div><div class="line"><span class="comment">//进入mongoDB shell</span></div><div class="line">cd C:\Program Files\MongoDB\Server\<span class="number">3.0</span>\bin</div><div class="line">mongo</div><div class="line"><span class="comment">//也可以将mongo所在路径加入环境变量path中,</span></div><div class="line"><span class="comment">//之后就可以直接在cmd里输入mongo进而打开mongo shell</span></div></pre></td></tr></table></figure>
<p>2017-03-02T11:41:12.460+0800 I CONTROL  [main] Trying to install Windows service ‘MongoDB’<br>2017-03-02T11:41:12.460+0800 I CONTROL  [main] Error connecting to the Service Control Manager: 拒绝访问。 (5)</p>
<p><a href="https://docs.mongodb.com/manual/" target="_blank" rel="external">mongoDB使用手册</a></p>
<h3 id="mongodb部分命令"><a href="#mongodb部分命令" class="headerlink" title="mongodb部分命令"></a>mongodb部分命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div></pre></td><td class="code"><pre><div class="line">//启用mongo shell</div><div class="line">mongo</div><div class="line">//连接远程mongo shell</div><div class="line">mongo 192.168.1.100</div><div class="line"></div><div class="line">//显示数据库</div><div class="line">show dbs</div><div class="line"></div><div class="line">//切换数据库</div><div class="line">use dbname</div><div class="line"></div><div class="line">//删除数据库</div><div class="line">db.dropDatabase()</div><div class="line"></div><div class="line">//显示当前正在使用的数据库</div><div class="line">db</div><div class="line">//显示当前数据库下面的所有集合(数据库里的数据表)</div><div class="line">show collections</div><div class="line">//导出test数据库到data/backup文件夹下</div><div class="line">mongodump -d test -o data/backup  </div><div class="line">//在要恢复的文件夹的父级目录里使用如下命令</div><div class="line">mongorestore data/backup</div><div class="line"></div><div class="line">//Use mongoexport to export the data: 导出test数据库下面的traffic表到traffic.json文件</div><div class="line">mongoexport --db test --collection traffic --out traffic.json</div><div class="line"></div><div class="line">mongoimport --db users --collection contacts --file contacts.json  </div><div class="line">mongoimport -d test -c cuxiao --type csv --headerline --file C:\Users\zyx\Desktop\2017-04-06.csv</div><div class="line"></div><div class="line"></div><div class="line">//插入记录</div><div class="line">db.collectionName.insert(&#123;&quot;userName&quot;:&quot;zs0&quot;,&quot;birthday&quot;:&quot;1999-09-09&quot;,&quot;passWord&quot;:&quot;123456&quot;,&quot;gender&quot;:0&#125;);</div><div class="line">//返回结果入下</div><div class="line">//WriteResult(&#123; &quot;nInserted&quot; : 1 &#125;)</div><div class="line"></div><div class="line">//插入一条记录 New in version 3.2</div><div class="line">db.collectionName.insertOne(&#123;&quot;userName&quot;:&quot;zs10&quot;,&quot;birthday&quot;:&quot;1999-09-09&quot;,&quot;passWord&quot;:&quot;123456&quot;,&quot;gender&quot;:0&#125;);</div><div class="line">// 返回结果如下</div><div class="line">&#123;</div><div class="line">    &quot;acknowledged&quot; : true,</div><div class="line">    &quot;insertedId&quot; : ObjectId(&quot;57e8ef4a0a3c3720c7a9650d&quot;)</div><div class="line">&#125;</div><div class="line"></div><div class="line">//插入多条记录 New in version 3.2</div><div class="line">db.collectionName.insertMany([</div><div class="line">    &#123;&quot;userName&quot;:&quot;zs3&quot;,&quot;birthday&quot;:&quot;1999-09-09&quot;,&quot;passWord&quot;:&quot;123456&quot;,&quot;gender&quot;:0&#125;,</div><div class="line">    &#123;&quot;userName&quot;:&quot;zs1&quot;,&quot;birthday&quot;:&quot;1999-09-09&quot;,&quot;passWord&quot;:&quot;123456&quot;,&quot;gender&quot;:0&#125;,</div><div class="line">    &#123;&quot;userName&quot;:&quot;zs2&quot;,&quot;birthday&quot;:&quot;1999-09-09&quot;,&quot;passWord&quot;:&quot;123456&quot;,&quot;gender&quot;:0&#125;]</div><div class="line">);</div><div class="line">//返回值如下</div><div class="line">&#123;</div><div class="line">    &quot;acknowledged&quot; : true,</div><div class="line">    &quot;insertedIds&quot; : [</div><div class="line">        ObjectId(&quot;57e8ef810a3c3720c7a9650e&quot;),</div><div class="line">        ObjectId(&quot;57e8ef810a3c3720c7a9650f&quot;),</div><div class="line">        ObjectId(&quot;57e8ef810a3c3720c7a96510&quot;)</div><div class="line">    ]</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">//查找全部数据</div><div class="line">db.collectionName.find();</div><div class="line">//查找全部数据但显示前两条</div><div class="line">db.collectionName.find().limit(2);</div><div class="line">//查看查询结果数量</div><div class="line">db.collectionName.find().count();</div><div class="line">//美化查询结果</div><div class="line">db.collectionName.find().pretty();</div><div class="line">//只显示需要列(_id默认显示,如果不需要显示必须显式阻止) 类似于命令 select username, email from users</div><div class="line">db.collectionName.find(&#123;&#125;, &#123;&quot;username&quot; : 1, &quot;email&quot; : 1, &quot;_id&quot; : 0&#125;)</div><div class="line">//单属性匹配</div><div class="line">db.collectionName.find(&#123;&quot;name&quot;:&quot;zs&quot;&#125;);</div><div class="line">db.collectionName.find(&#123;&quot;user.name&quot;:&quot;zs&quot;&#125;);</div><div class="line">//多属性同时匹配</div><div class="line">db.collectionName.find(&#123;&quot;age&quot;:20,&quot;name&quot;:&quot;zs&quot;&#125;);</div><div class="line">//时间段查询</div><div class="line">var start = new Date(2017, 3, 1);</div><div class="line">var end = new Date(2017, 4, 7);</div><div class="line">db.cuxiao.find(&#123;created_on: &#123;$gte: start, $lt: end&#125;&#125;);</div><div class="line">//正则表达式匹配 find  name startwith &quot;z&quot; and endWith &quot;s&quot;</div><div class="line">db.collectionName.find(&#123;&quot;name&quot;:/^z/&#125;,&#123;&quot;name&quot;:/s$/&#125;);</div><div class="line">//正则表达式匹配 find  name 包含BD字符串</div><div class="line">db.collectionName.find(&#123;&quot;name&quot;:/BD+/&#125;);</div><div class="line">//where条件匹配</div><div class="line">db.collectionName.find(&#123;$where:function()&#123;return this.name=&quot;zs&quot;&#125;&#125;);</div><div class="line">//find age&lt;23 gl:less than</div><div class="line">db.collectionName.find(&#123;&quot;age&quot;:&#123;$lt:23&#125;&#125;);</div><div class="line">//find age&gt;23 gt：greater than</div><div class="line">db.collectionName.find(&#123;&quot;age&quot;:&#123;$gt:23&#125;&#125;);</div><div class="line">//find name=&quot;zs&quot; || age=20</div><div class="line">db.collectionName.find(&#123;$or:[&#123;&quot;age&quot;:20&#125;,&#123;&quot;name&quot;:&quot;zs&quot;&#125;]&#125;);</div><div class="line">//find age in (10,20,22)</div><div class="line">db.collectionName.find(&#123;&quot;age&quot;:&#123;$in:[10,20,22]&#125;&#125;);</div><div class="line">//find age not in (10,20,22)</div><div class="line">db.collectionName.find(&#123;&quot;age&quot;:&#123;$nin:[10,20,22]&#125;&#125;);</div><div class="line"></div><div class="line"></div><div class="line">//修改name=zs为new_ZS 年龄为40</div><div class="line">db.person.update(&#123;&quot;name&quot;:&quot;zs&quot;&#125;,&#123;&quot;name&quot;:&quot;new_ZS&quot;,&quot;age&quot;:40&#125;);</div><div class="line">//年龄增加20</div><div class="line">db.person.update(&#123;&quot;name&quot;:&quot;zs&quot;&#125;,&#123;$inc:&#123;&quot;age&quot;:20&#125;&#125;);</div><div class="line">//年龄设置为33</div><div class="line">db.person.update(&#123;&quot;name&quot;:&quot;zs&quot;&#125;,&#123;$set:&#123;&quot;age&quot;:33&#125;&#125;);</div><div class="line">//第三个参数true，表示更新条件找不到时增加一条记录</div><div class="line">db.person.update(&#123;&quot;name&quot;:&quot;szs&quot;&#125;,&#123;$set:&#123;&quot;age&quot;:33&#125;&#125;,true);</div><div class="line">//第四个参数表示更新全部数据</div><div class="line">db.person.update(&#123;&quot;name&quot;:&quot;zs&quot;&#125;,&#123;$inc:&#123;&quot;age&quot;:20&#125;&#125;，true,true);</div><div class="line">//对表中所有数据增加birthday列并设置其默认值</div><div class="line">db.person.update(&#123;&#125;,&#123;$set:&#123;&quot;birthday&quot;:&quot;1991-01-01&quot;&#125;&#125;,true,true);</div><div class="line">//修改字段类型</div><div class="line">db.cuxiao.find(&#123;&quot;商品id&quot;:528438367552&#125;).forEach(function(x) &#123;</div><div class="line">    x.优惠券结束时间 = new Date(x.优惠券结束时间);</div><div class="line">    x.优惠券开始时间 = new Date(x.优惠券开始时间);</div><div class="line">    db.cuxiao.save(x);</div><div class="line">&#125;)</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">//删除某集合下`name`字段值为`new_ZS`的记录</div><div class="line">db.collectionName.remove(&#123;&quot;name&quot;:&quot;new_ZS&quot;&#125;);</div><div class="line">//删除某集合下的全部数据（清空表）</div><div class="line">db.collectionName.remove(&#123;&#125;);</div><div class="line">//删除某集合下某字段（eg：userName）不存在的记录</div><div class="line">db.collectionName.remove( &#123; &quot;userName&quot;: &#123; $exists: false &#125; &#125; )</div><div class="line">//删除某集合（删除某表）</div><div class="line">db.collectionName.drop();</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">//统计年龄为20的记录条数</div><div class="line">db.person.count(&#123;&quot;age&quot;:20&#125;);</div><div class="line">//name不重复的记录</div><div class="line">db.person.distinct(&quot;name&quot;);</div><div class="line">//name不重复的记录条数</div><div class="line">db.cuxiao.distinct(&quot;id&quot;).length</div><div class="line">//name字段升序排列</div><div class="line">db.person.ensureIndex(&#123;&quot;name&quot;:1&#125;)</div><div class="line">db.person.ensureIndex(&#123;&quot;name&quot;:1&#125;,&#123;&quot;unique&quot;:true&#125;);</div><div class="line">//非空唯一 可以为空</div><div class="line">db.person.ensureIndex(&#123;&quot;name&quot;:1&#125;,&#123;&quot;unique&quot;:true,&quot;sparse&quot;:true&#125;);</div><div class="line">db.person.find(&#123;&quot;name&quot;:&quot;ns&quot;&#125;).explain();</div><div class="line">db.person.ensureIndex(&#123;&quot;name&quot;:1,&quot;age&quot;:1&#125;);</div><div class="line">//获取该集合的索引</div><div class="line">db.person.getIndexes();</div><div class="line">// 要删除的索引名字需通过查看得到</div><div class="line">db.person.dropIndexes(&quot;name_1&quot;);</div></pre></td></tr></table></figure>
<h2 id="Mac-OSX-下安装MongoDB"><a href="#Mac-OSX-下安装MongoDB" class="headerlink" title="Mac OSX 下安装MongoDB"></a>Mac OSX 下安装MongoDB</h2><h3 id="以下内容为我自己安装流程记录已确保能正常使用"><a href="#以下内容为我自己安装流程记录已确保能正常使用" class="headerlink" title="以下内容为我自己安装流程记录已确保能正常使用"></a>以下内容为我自己安装流程记录已确保能正常使用</h3><blockquote>
<p>根目录指的是<code>zyxdeMacBook-Pro:/ zyx$</code> 这里显示的是一个<code>/</code><br>而用户根目录是<code>zyxdeMacBook-Pro:~ zyx$</code>这里显示的是一个<code>~</code></p>
</blockquote>
<p>1.把从官网上下的文件，型如：mongodb-osx-x86_64-3.4.0 解压到根目录(非用户根目录)文件夹<br>2.在根目录下(非用户根目录)新建mongodb文件夹,新建db文件夹（存放数据）mongodb/data/db<br>3.<code>sudo chown －R  /mongodb</code> 设置权限<br>4.新建文件mongodb/etc/mongod.conf和mongodb/etc/mongod.log<br>5.进入到bin目录，使用<code>mongod --config /mongodb/etc/mongod.conf</code> 设置mongod 配置。<br>6.如果看到waiting for connections on port 27017<br>7.可以打开浏览器输入：localhost:27017,如果看到It looks like you are trying to access MongoDB over HTTP on the native<br> driver port 说明连接成功了。<br>8.点击终端 Commond+N 打开一个新的终端 cd 到bin目录 ./mongo 便可连接到数据库进行操作  </p>
<p><code>mongod.conf</code> 文件内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#mongodb config file</div><div class="line">dbpath=/mongodb/data/db</div><div class="line">logpath=/mongodb/etc/mongod.log</div><div class="line">logappend = true</div></pre></td></tr></table></figure></p>
<h2 id="Mac-OSX-下设置环境变量"><a href="#Mac-OSX-下设置环境变量" class="headerlink" title="Mac OSX 下设置环境变量"></a>Mac OSX 下设置环境变量</h2><p>1.打开 应用程序 -&gt; 实用工具 -&gt; 终端；<br>2.在终端中定位到自己用户的主目录，输入： <code>cd ~</code>；<br>3.创建一个空文件，输入：<code>touch .bash_profile</code> ；<br>4.编辑这个文件，输入：<code>open .bash_profile</code> ；<br>5.在这个文件中输入：<code>export PATH=${PATH}:&lt;文件目录&gt;</code>；（将”&lt;文件目录&gt;”替换成自己想要的目录）<br>例如：<code>export PATH=${PATH}:mongodb-osx-x86_64-2.6.1/bin</code>（我把下载后的文件直接放到了根目录）;<br>6.如果需要添加其他的环境变量例如JAVA_HOME，可以输入：<code>export JAVA_HOME=/Library/Java/Home</code> ；<br>7.<code>source .bash_profile</code>重启终端，测试,这个时候就可以在用户主目录使用上面配置过的配置文件进行设置<code>mongod --config /mongodb/etc/mongod.conf</code>   来启动数据库了，点击终端Commond+N打开一个新的终端，使用mongo命令来连接数据库，对数据库进行操作,比如：<code>show dbs</code> 显示所有的集合  </p>
<h2 id="Mac-OSX-下设置MongoDB的开机启动"><a href="#Mac-OSX-下设置MongoDB的开机启动" class="headerlink" title="Mac OSX 下设置MongoDB的开机启动"></a>Mac OSX 下设置MongoDB的开机启动</h2><p>Mac 下用于初始化系统环境的关键经常是 launchd，它是内核转载成功后启动的第一个进程。<br>所以设置服务的开机启动要用到这个进程。采用 launchd 开机启动 需要配置一个plist文件。</p>
<p>开机启动分为两种：<br>     1、在用户登陆前启动；( plist文件放置在目录：~/Library/LaunchDaemons ) ==我选的是这个 ==<br>     2、在用户登陆后启动。( plist文件放置在目录：~/Library/LaunchAgents )</p>
<p>如 MongoDB 的开机启动,需要在 LaunchDaemons 或 LaunchAgents 创建一个 plist文件。<br>如 org.mongodb.mongod.plist 内容如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">&lt;plist version=&quot;1.0&quot;&gt;</div><div class="line">  &lt;plist version=&quot;1.0&quot;&gt;</div><div class="line">  &lt;dict&gt;</div><div class="line">    &lt;key&gt;Label&lt;/key&gt;</div><div class="line">    &lt;string&gt;org.mongodb.mongod&lt;/string&gt;</div><div class="line">    &lt;key&gt;ProgramArguments&lt;/key&gt;</div><div class="line">    &lt;array&gt;</div><div class="line">      &lt;string&gt;/mongodb-osx-x86_64-3.4.0/bin/mongod&lt;/string&gt;</div><div class="line">      &lt;string&gt;-f&lt;/string&gt;</div><div class="line">      &lt;string&gt;/mongodb/etc/mongod.conf&lt;/string&gt;</div><div class="line">    &lt;/array&gt;</div><div class="line">    &lt;key&gt;RunAtLoad&lt;/key&gt;</div><div class="line">    &lt;true/&gt;</div><div class="line">    &lt;key&gt;KeepAlive&lt;/key&gt;</div><div class="line">    &lt;false/&gt;</div><div class="line">    &lt;key&gt;WorkingDirectory&lt;/key&gt;</div><div class="line">    &lt;string&gt;/mongodb-osx-x86_64-3.4.0&lt;/string&gt;</div><div class="line">    &lt;key&gt;StandardErrorPath&lt;/key&gt;</div><div class="line">    &lt;string&gt;/mongodb/etc/error.log&lt;/string&gt;</div><div class="line">    &lt;key&gt;StandardOutPath&lt;/key&gt;</div><div class="line">    &lt;string&gt;/mongodb/etc/output.log&lt;/string&gt;</div><div class="line">    &lt;key&gt;HardResourceLimits&lt;/key&gt;</div><div class="line">    &lt;dict&gt;</div><div class="line">      &lt;key&gt;NumberOfFiles&lt;/key&gt;</div><div class="line">      &lt;integer&gt;1024&lt;/integer&gt;</div><div class="line">    &lt;/dict&gt;</div><div class="line">    &lt;key&gt;SoftResourceLimits&lt;/key&gt;</div><div class="line">    &lt;dict&gt;</div><div class="line">      &lt;key&gt;NumberOfFiles&lt;/key&gt;</div><div class="line">      &lt;integer&gt;1024&lt;/integer&gt;</div><div class="line">    &lt;/dict&gt;</div><div class="line">  &lt;/dict&gt;</div><div class="line">  &lt;/plist&gt;</div></pre></td></tr></table></figure></p>
<p>注意：以上的几个目录需要自己按自己的安装路径设置<br>plist 文件创建好后 根据自己设置执行如下命令加载到 开机启动中：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">//如果没有这个授权命令会给出如下错误提示</div><div class="line">// /Library/LaunchDaemons/org.mongodb.mongod.plist: Path had bad ownership/permissions</div><div class="line">sudo chown root /Library/LaunchDaemons/org.mongodb.mongod.plist</div><div class="line">sudo launchctl load /Library/LaunchDaemons/org.mongodb.mongod.plist</div></pre></td></tr></table></figure>
<p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo launchctl load /Library/LaunchAgents/org.mongodb.mongod.plist</div></pre></td></tr></table></figure></p>
<p>命令执行后 mongodb 将会马上启动，下次也会随开机而启动。<br>可通过<a href="http://127.0.0.1:27017/" target="_blank" rel="external">http://127.0.0.1:27017</a>查看是否启动成功。</p>
]]></content>
    
    <summary type="html">
    
      mongodb安装,shell命令记录
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>express允许多个网站跨域访问</title>
    <link href="http://www.zhuyangxing.cn/2016/11/17/express%E5%85%81%E8%AE%B8%E5%A4%9A%E4%B8%AA%E7%BD%91%E7%AB%99%E8%B7%A8%E5%9F%9F%E8%AE%BF%E9%97%AE/"/>
    <id>http://www.zhuyangxing.cn/2016/11/17/express允许多个网站跨域访问/</id>
    <published>2016-11-17T05:21:35.000Z</published>
    <updated>2017-01-18T07:42:35.000Z</updated>
    
    <content type="html"><![CDATA[<p><code>Access-Control-Allow-Origin</code>只允许一个值不允许多个值，我们会很自然的理解为多个域添加逗号，但是的确不行，该属性的值只允许一个值。<br><strong>解决方案：</strong><br>判断当前请求的host，是否在允许列表如果在允许列表，则设置<code>Access-Control-Allow-Origin</code>属性为该请求的host即可。详细代码入下：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//设置允许跨域访问</span></div><div class="line">app.all(<span class="string">'/api/*'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</div><div class="line">  <span class="comment">//把允许的域都写在allows数组里即可</span></div><div class="line">  <span class="keyword">var</span> allows = [<span class="string">"http://openks.oschina.io"</span>, <span class="string">"http://www.zhuyangxing.cn"</span>];</div><div class="line">  <span class="comment">//线上环境使用线上地址，线下环境使用线下地址。也可把所有地址写在允许的数组里不用判断线上和线下环境</span></div><div class="line">  <span class="keyword">if</span> (process.env.SERVER_SOFTWARE != <span class="literal">undefined</span> &amp;&amp; process.env.SERVER_SOFTWARE.indexOf(<span class="string">"bae"</span>) &gt; <span class="number">-1</span>) &#123;</div><div class="line">    <span class="keyword">if</span> (allows.indexOf(req.headers.origin) &gt; <span class="number">-1</span>) &#123;</div><div class="line">      res.header(<span class="string">"Access-Control-Allow-Origin"</span>, req.headers.origin);</div><div class="line">    &#125;</div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    res.header(<span class="string">"Access-Control-Allow-Origin"</span>, <span class="string">"http://10.10.11.222"</span>);</div><div class="line">  &#125;</div><div class="line">  res.header(<span class="string">"Access-Control-Allow-Headers"</span>, <span class="string">"X-Requested-With"</span>);</div><div class="line">  res.header(<span class="string">"Access-Control-Allow-Methods"</span>, <span class="string">"PUT,POST,GET,DELETE,OPTIONS"</span>);</div><div class="line">  res.header(<span class="string">"Content-Type"</span>, <span class="string">"application/json;charset=utf-8"</span>);</div><div class="line">  next();</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>当然也可以使用<code>npm</code>上已经存在的插件<code>cors</code> 关于 <code>cors</code>更多信息在<a href="https://www.npmjs.com/package/cors" target="_blank" rel="external">这里</a></p>
]]></content>
    
    <summary type="html">
    
      express允许多个网站跨域访问简单办法
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>在BAE上部署nodejs项目</title>
    <link href="http://www.zhuyangxing.cn/2016/11/10/BAE%E9%83%A8%E7%BD%B2nodejs%E9%A1%B9%E7%9B%AE/"/>
    <id>http://www.zhuyangxing.cn/2016/11/10/BAE部署nodejs项目/</id>
    <published>2016-11-10T13:20:55.000Z</published>
    <updated>2017-01-18T07:41:42.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在BAE上添加应用-并clone代码"><a href="#在BAE上添加应用-并clone代码" class="headerlink" title="在BAE上添加应用,并clone代码"></a>在BAE上添加应用,并clone代码</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">//从git clone代码</div><div class="line">git clone https://git.duapp.com/appid9rupli9dyd</div></pre></td></tr></table></figure>
<h2 id="安装express"><a href="#安装express" class="headerlink" title="安装express"></a>安装express</h2><p>在<code>appid9rupli9dyd</code>文件夹安装express<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">//安装express</div><div class="line">npm install express --save</div><div class="line">//安装express生成器</div><div class="line">npm install express-generator -g</div><div class="line">//-e 启用ejs模板(默认jade) -f 在非空文件夹生成目录结构</div><div class="line">express -e-f</div><div class="line">//项目初始化，修改当前package.json文件</div><div class="line">npm init</div><div class="line">//安装依赖包</div><div class="line">npm install</div><div class="line">//以debug方式启动项目</div><div class="line">SET DEBUG=appid9rupli9dyd:* &amp; npm start</div></pre></td></tr></table></figure></p>
<p>本地3000端口查看效果 <a href="http://127.0.0.1:3000" target="_blank" rel="external">http://127.0.0.1:3000</a></p>
<p>因为BAE使用的是18080端口需要修改端口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">//在app.js 文件导出之前添加默认端口修改</div><div class="line">process.env.PORT =18080;</div><div class="line">`</div></pre></td></tr></table></figure></p>
<p>重启后去本地3000及18080端口查看效果 <a href="http://127.0.0.1:18080" target="_blank" rel="external">http://127.0.0.1:18080</a> ，3000端口已经不能访问，18080端口可访问</p>
<p>修改代码需要重新部署，我们可以通过使用supervisor提高nodejs调试效率,可以做到修改代码自动部署，使用起来也很简单</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#全局安装supervisor</span></div><div class="line">npm install -g supervisor</div><div class="line">supervisor bin/www</div></pre></td></tr></table></figure>
<p>public 目录可以直接访问，我不习惯使用默认，会修改为js,css,img同时会修改相对应的路径</p>
<h2 id="部署BAE"><a href="#部署BAE" class="headerlink" title="部署BAE"></a>部署BAE</h2><p>上传代码到BAE,发现报错，错误信息如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">552 occured because of user code error</div><div class="line"></div><div class="line">your package.json file error</div><div class="line"></div><div class="line">pacakge.json must json file and must contain &quot;scripts&quot;:&#123;&quot;start&quot;:&quot;node xxx.js&quot;&#125;</div><div class="line"></div><div class="line">please modify your package.json and recommit your code</div><div class="line"></div><div class="line">Error Message is</div><div class="line"></div><div class="line">[2016-07-29 14:47:57.550] [ERROR] manager - catch signal SIGTERM, manager will exit</div><div class="line">[2016-07-29 14:48:00.316] [ERROR] manager - scripts.start in package.json must contain &quot;.js&quot;, but your scripts.start is &quot;node ./bin/www&quot;</div><div class="line">get more message, please check manager.log</div></pre></td></tr></table></figure></p>
<p>start 必须以.js结尾。重命名<code>bin/www</code>为<code>bin/www.js</code>即可</p>
<p>如果不上传依赖文件,错误信息如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">失败原因：编译失败</div><div class="line">失败信息：Fix depends failed. Please check requirements.txt or package.json.</div><div class="line"></div><div class="line">npm ERR! Linux 3.10.1-grsec</div><div class="line">npm ERR! argv &quot;/home/bae/bae/node-v4.4.4-linux-x64/bin/node&quot; &quot;/home/bae/bae/node-v4.4.4-linux-x64/bin/npm&quot; &quot;install&quot; &quot;--production&quot;</div><div class="line">npm ERR! node v4.4.4</div><div class="line">npm ERR! npm v2.15.1</div><div class="line">npm ERR! failed to fetch from registry: http://registry.cnpmjs.org/morgan</div><div class="line">npm ERR!</div><div class="line">npm ERR! If you need help, you may report this error at:</div><div class="line">npm ERR! &lt;https://github.com/npm/npm/issues&gt;</div><div class="line">npm ERR! Please include the following file with any support request:</div><div class="line">npm ERR! /home/bae/run/baeng/helios/work/appid9rupli9dyd/.bae/npm-debug.log</div></pre></td></tr></table></figure></p>
<p>一看就知道依赖加载失败，把依赖文件夹整体上传就可以了。<br>由于BAE使用的可视化界面为rockmongo,而且不能远程连接不能使用mongoshell,所以我们需要稍微了解下rockmongo</p>
<h2 id="rockmongo"><a href="#rockmongo" class="headerlink" title="rockmongo"></a>rockmongo</h2><p>插入数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">array(</div><div class="line">  &quot;userName&quot; : &quot;张三疯&quot;,</div><div class="line">  &quot;passWord&quot; : &quot;123456&quot;,</div><div class="line">  &quot;birthday&quot; : &quot;1991-01-01&quot;,</div><div class="line">  &quot;gender&quot; : 2</div><div class="line">)</div><div class="line">//结果</div><div class="line">array (</div><div class="line">  &apos;_id&apos; =&gt; new MongoId(&quot;579b0eb5b6939eec77000000&quot;),</div><div class="line">  &apos;userName&apos; =&gt; &apos;张三疯&apos;,</div><div class="line">  &apos;passWord&apos; =&gt; &apos;123456&apos;,</div><div class="line">  &apos;birthday&apos; =&gt; &apos;1991-01-01&apos;,</div><div class="line">  &apos;gender&apos; =&gt; new MongoInt64(2),</div><div class="line">)</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      如何快速在BAE上部署项目及错误问题排查
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>开发利器之atom</title>
    <link href="http://www.zhuyangxing.cn/2016/10/17/atom/"/>
    <id>http://www.zhuyangxing.cn/2016/10/17/atom/</id>
    <published>2016-10-17T08:20:55.000Z</published>
    <updated>2017-01-18T07:41:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>打开设置<br>windows<br> file / settings<br>mac<br> atom / Preferences</p>
<p>安装插件列表<br>minimap   缩略图<br>docblockr   jsdoc注释快速生成器<br>pigments   颜色显示插件<br>atom-jsfmt   格式化js插件<br>atom-css-comb css,less,scss,sass文件格式化<br>atom-beautify   格式化html,css,js,java,SQL 等<br>open_in_cmd  右键可以直接在cmd命令行中打开<br>sass-autocomplie 自动编译sass文件<br>script     run code in atom<br>node-debugger debugger for nodejs<br>atom-ternjs js自动补全引擎Adds support for ES5, ES6, ES7, Node.js, jQuery, Angular and more. Extendable via plugin<br>emmet html快速生成器<br>git-status 显示git状态<br>git-time-machine git时光机  </p>
<p>代码折叠<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">折叠一行 ctrl+alt+[</div><div class="line">展开折叠  ctrl+alt+]</div><div class="line">折叠多行选中后 ctrl+alt+shift+[</div><div class="line">展开多行折叠  ctrl+alt+shift+]</div><div class="line">调出F12控制台 ctrl+alt+i</div><div class="line">一次保存多个文件 ctrl+shift+s</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">keybinding</div><div class="line">&apos;atom-text-editor:not([mini])&apos;:</div><div class="line">  #删除行</div><div class="line">  &apos;ctrl-d&apos;: &apos;editor:delete-line&apos;</div><div class="line">&apos;atom-workspace&apos;:</div><div class="line">  #格式化</div><div class="line">  &apos;ctrl-shift-f&apos;: &apos;editor:auto-indent&apos;</div><div class="line">  #向下复制行</div><div class="line">  &apos;ctrl-alt-down&apos;: &apos;editor:duplicate-lines&apos;</div></pre></td></tr></table></figure>
<h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><p>Q1:保存文件自动格式化<br>A1:插件<code>atom-beautify</code>设置里有选项可以进行设置  </p>
<p>Q2:ATOM一行显示多个字符，不自动换行<br>A2:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">//勾选后自动换行,取消勾选就不换行</div><div class="line">Soft Wrap</div><div class="line">//勾选后可自主设置每行显示字符数</div><div class="line">Soft Wrap At Preferred Line Length</div><div class="line">//自助设置的每行最多显示字数</div><div class="line">Preferred Line Length</div></pre></td></tr></table></figure></p>
<p>Q3:ATOM如何一次保存所有修改过的文件<br>A3:这个没找到，一个文件一个文件的保存吧,一个文件也就一次<code>ctrl+s</code>而已</p>
<p>Q4:apm里显示npm版本过低如何升级<br>A4:重新下载AOM并安装即可</p>
]]></content>
    
    <summary type="html">
    
      GitHub 发布的文本编辑器 Atom 介绍
    
    </summary>
    
      <category term="前端" scheme="http://www.zhuyangxing.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="工具" scheme="http://www.zhuyangxing.cn/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>OAuth2.0接入学习，含github和新浪</title>
    <link href="http://www.zhuyangxing.cn/2016/09/18/OAuth2.0%E6%8E%A5%E5%85%A5%E5%AD%A6%E4%B9%A0%EF%BC%8C%E5%90%ABgithub%E5%92%8C%E6%96%B0%E6%B5%AA/"/>
    <id>http://www.zhuyangxing.cn/2016/09/18/OAuth2.0接入学习，含github和新浪/</id>
    <published>2016-09-18T09:28:58.000Z</published>
    <updated>2017-01-14T05:31:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="github接入"><a href="#github接入" class="headerlink" title="github接入"></a>github接入</h1><p>github的<a href="https://developer.github.com/v3/oauth/" target="_blank" rel="external">文档</a>其实说的已经很明白了按照文档一步一步操作就可以了</p>
<p>总的来说有一下三步：<br>第一步:获取code<br>第二步:使用post获取access_token<br>第三步：根据access_token获取想要数据  </p>
<p>首先需要创建一个<a href="https://github.com/settings/applications/new" target="_blank" rel="external">应用</a>页面如下<br><img src="http://7xl9u9.com1.z0.glb.clouddn.com/2016-09-18_09-36-19.png" alt="image"><br>填写以上四个信息即可，填写完成效果如下：<br><img src="http://7xl9u9.com1.z0.glb.clouddn.com/2016-09-18_09-46-07.png" alt="image"><br>点击进如可看到如下信息<br><img src="http://7xl9u9.com1.z0.glb.clouddn.com/2016-09-18_09-38-52.png" alt="image"><br>可以得到一个Client ID 和 Client Secret 后面会用到。</p>
<p>第一步：<br>在自己页面添加按钮点击跳转到git获取权限页面，页面地址为：<code>https://github.com/login/oauth/authorize?client_id=client_id</code>  <a href="https://github.com/login/oauth/authorize?client_id=fdbdb307432243b88b1e" target="_blank" rel="external">我的例子在这里</a> 效果如图： </p>
<p><img src="http://7xl9u9.com1.z0.glb.clouddn.com/2016-09-18_10-53-00.png" alt="image"><br>如果不同意直接叉掉页面即可，如果同意则跳转到设置的授权回调地址,会带一个名为code的参数</p>
<p>第二步：<br>根据<code>client_id</code>,<code>client_secret</code>,<code>code</code>三个参数使用POST方法获取<code>access_token</code>返回的不止这一个还有其他参数<br><code>access_token=e72e16c7e42f292c6912e7710c838347ae178b4a&amp;scope=user%2Cgist&amp;token_type=bearer</code></p>
<p>第三步：<br>通过<code>access_token</code> 就可以使用github 提供的API了。<br>使用get请求<code>https://api.github.com/user?access_token=access_token</code><br>即可获取用户相关信息</p>
<h1 id="新浪微博接入"><a href="#新浪微博接入" class="headerlink" title="新浪微博接入"></a>新浪微博接入</h1><p>新浪的接入<a href="http://open.weibo.com/wiki/Oauth2/authorize" target="_blank" rel="external">文档</a></p>
<p>创建<a href="http://open.weibo.com/apps" target="_blank" rel="external">应用</a>创建后页面如下<br><img src="http://7xl9u9.com1.z0.glb.clouddn.com/2016-09-18_14-36-02.png" alt="image"></p>
<p>在接口管理，授权机制页面设置<code>授权回调页</code>和<code>取消授权回调页</code>地址<br>在网站信息和基本信息里可以看到<code>App Key</code>和<code>App Secret</code></p>
<p>第一步：<br>在自己页面添加按钮点击跳转到新浪微博获取权限页面，页面地址为：<code>https://api.weibo.com/oauth2/authorize?client_id=client_id&amp;redirect_uri=redirect_uri</code>  <a href="https://api.weibo.com/oauth2/authorize?client_id=2139214853&amp;redirect_uri=http://openks.duapp.com/oauth?t=weibo" target="_blank" rel="external">我的例子在这里</a> 效果如图： </p>
<p><img src="http://7xl9u9.com1.z0.glb.clouddn.com/2016-09-18_14-17-41.png" alt="image"><br>如果不同意直接叉掉页面即可，如果同意则跳转到设置的授权回调地址,会带一个名为code的参数</p>
<p>第二步：</p>
<p>根据<code>client_id(即AppKey)</code>,<code>client_secret(即AppSecret)</code>,<code>grant_type(需填写authorization_code)</code>,<code>redirect_uri</code>,<code>code(上一步返回的)</code>五个必须参数使用POST方法从<code>https://api.weibo.com/oauth2/access_token</code>获取<code>access_token</code>返回的不止这一个还有其他参数<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">       <span class="string">"access_token"</span>: <span class="string">"ACCESS_TOKEN"</span>,</div><div class="line">       <span class="string">"expires_in"</span>: <span class="number">1234</span>,</div><div class="line">       <span class="string">"remind_in"</span>:<span class="string">"798114"</span>,</div><div class="line">       <span class="string">"uid"</span>:<span class="string">"12341234"</span></div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
<p>第三步：<br>通过<code>access_token</code>及相关数据就可以使用微博提供的API了。<br>使用get请求<code>https://api.weibo.com/2/users/show.json?access_token=access_token&amp;uid=uid</code>其中uid为要查询用户id<br>即可获取用户相关信息</p>
<h1 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h1><p>点击使用第三方登录后跳转授权页面，授权完成后拿到<code>access_token</code>,根据<code>access_token</code>拿到用户id,把第三方名称加第三方用户id拼接字符串作为自己数据库里用户id,并设置为用户已登录，然后跳转页面到已登录页面，进入自己系统逻辑即可。</p>
]]></content>
    
    <summary type="html">
    
      OAuth2.0接入学习，含github和新浪
    
    </summary>
    
      <category term="前端" scheme="http://www.zhuyangxing.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="http://www.zhuyangxing.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>使用html页面浏览文件夹里的所有图片</title>
    <link href="http://www.zhuyangxing.cn/2016/09/18/%E4%BD%BF%E7%94%A8html%E9%A1%B5%E9%9D%A2%E6%B5%8F%E8%A7%88%E6%96%87%E4%BB%B6%E5%A4%B9%E9%87%8C%E7%9A%84%E6%89%80%E6%9C%89%E5%9B%BE%E7%89%87/"/>
    <id>http://www.zhuyangxing.cn/2016/09/18/使用html页面浏览文件夹里的所有图片/</id>
    <published>2016-09-18T09:27:35.000Z</published>
    <updated>2017-01-14T05:31:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用html页面浏览文件夹里的所有图片</p>
<h1 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h1><p>使用node服务器读取某文件夹下面的所有图片文件的文件名(jpg,png,jpeg,gif等,暂时只想到了这几个)，遍历所有文件名拼接字符串，使用生成的字符串填充新生成的html文件即可。</p>
<p>第一步：获取文件夹下的所有文件名<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>);</div><div class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">"path"</span>);</div><div class="line"><span class="keyword">var</span> m = fs.readdirSync(__dirname);</div><div class="line"><span class="built_in">console</span>.log(m);<span class="comment">//会打印文件夹下所有文件名及文件夹名称，m为数组</span></div></pre></td></tr></table></figure></p>
<p>第二步：判断是不是图片,并拼接<code>html</code>字符串<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">m[i].indexOf(<span class="string">".jpg"</span>) &gt; <span class="number">0</span></div></pre></td></tr></table></figure></p>
<p>第三步：把生成的字符串<code>str</code>填充到<code>index.html</code>文件中<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">fs.writeFile(<span class="string">"index.html"</span>, str, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="string">"文件创建完成"</span>);</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p>第四步：把文件夹名字作为<code>html</code>的<code>title</code><br>查看path的api找到有一个<a href="https://nodejs.org/api/path.html#path_path_parse_path" target="_blank" rel="external">parse</a>方法：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">path.parse(__dirname).name</div><div class="line"><span class="comment">//测试结果如下(dirname的name属性即父文件夹的名字)</span></div><div class="line"><span class="comment">//F:\code\personal\openks&gt;node test.js</span></div><div class="line">dirname:</div><div class="line"> &#123; <span class="attr">root</span>: <span class="string">'F:\\'</span>,</div><div class="line">  <span class="attr">dir</span>: <span class="string">'F:\\code\\personal'</span>,</div><div class="line">  <span class="attr">base</span>: <span class="string">'openks'</span>,</div><div class="line">  <span class="attr">ext</span>: <span class="string">''</span>,</div><div class="line">  <span class="attr">name</span>: <span class="string">'openks'</span> &#125;</div><div class="line">filename:</div><div class="line"> &#123; <span class="attr">root</span>: <span class="string">'F:\\'</span>,</div><div class="line">  <span class="attr">dir</span>: <span class="string">'F:\\code\\personal\\openks'</span>,</div><div class="line">  <span class="attr">base</span>: <span class="string">'test.js'</span>,</div><div class="line">  <span class="attr">ext</span>: <span class="string">'.js'</span>,</div><div class="line">  <span class="attr">name</span>: <span class="string">'test'</span> &#125;</div></pre></td></tr></table></figure></p>
<p>完整代码及使用方法详见<a href="http://openks.oschina.io/js/create-index.js" target="_blank" rel="external">这里</a></p>
]]></content>
    
    <summary type="html">
    
      通过nodejs使用html页面浏览文件夹里的所有图片
    
    </summary>
    
      <category term="前端" scheme="http://www.zhuyangxing.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="http://www.zhuyangxing.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>淘宝Rap服务使用简述</title>
    <link href="http://www.zhuyangxing.cn/2016/09/18/%E6%B7%98%E5%AE%9DRap%E6%9C%8D%E5%8A%A1%E4%BD%BF%E7%94%A8%E7%AE%80%E8%BF%B0/"/>
    <id>http://www.zhuyangxing.cn/2016/09/18/淘宝Rap服务使用简述/</id>
    <published>2016-09-18T09:26:34.000Z</published>
    <updated>2017-01-14T05:31:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>前端时间曾经发布文章说<a href="http://www.zhuyangxing.cn/2016/06/17/%E7%8B%AC%E7%AB%8B%E4%BA%8E%E5%90%8E%E7%AB%AF%E7%9A%84%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/">独立于后端的前端开发</a>,但是仍然需要自己写模拟数据，可以通过使用淘宝提供的rap服务来自动生成数据。需要在<a href="http://rap.taobao.org/org/index.do" target="_blank" rel="external">淘宝rap</a>上进行配置</p>
<p>注册后选择或创建一个团队，新建一个产品线，新建产品，创建项目，创建模块，创建页面<br>对页面的接口进行编辑，然后只需引入一个js文件即可使用模拟数据。<br><img src="http://7xl9u9.com1.z0.glb.clouddn.com/2016-09-18_17-07-45.png" alt="image"></p>
<p>可以通过项目的编辑添加接口，设置请求类型，请求连接，返回数据格式以及请求和返回数据的数据结构来新建接口，接口建完之后就可以通过引入js文件(在配置按钮里查看)就可以看到效果。</p>
<p>请求和响应参数均支持mock写法,经测试只支持部分 如@cfirst,@cname就不支持了。</p>
]]></content>
    
    <summary type="html">
    
      mockjs，生成随机数据，拦截 Ajax 请求，淘宝Rap服务使用简述
    
    </summary>
    
      <category term="前端" scheme="http://www.zhuyangxing.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="http://www.zhuyangxing.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>元素高度随兄弟元素高度变化而变化(二)</title>
    <link href="http://www.zhuyangxing.cn/2016/08/12/%E5%85%83%E7%B4%A0%E9%AB%98%E5%BA%A6%E9%9A%8F%E5%85%84%E5%BC%9F%E5%85%83%E7%B4%A0%E9%AB%98%E5%BA%A6%E5%8F%98%E5%8C%96%E8%80%8C%E5%8F%98%E5%8C%96(%E4%BA%8C)/"/>
    <id>http://www.zhuyangxing.cn/2016/08/12/元素高度随兄弟元素高度变化而变化(二)/</id>
    <published>2016-08-12T03:20:48.000Z</published>
    <updated>2017-01-14T05:31:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前曾写过一篇文章说如何实现<a href="http://www.zhuyangxing.cn/2016/05/30/%E5%85%83%E7%B4%A0%E9%AB%98%E5%BA%A6%E9%9A%8F%E5%85%84%E5%BC%9F%E5%85%83%E7%B4%A0%E9%AB%98%E5%BA%A6%E5%8F%98%E5%8C%96%E8%80%8C%E5%8F%98%E5%8C%96/">元素高度随兄弟元素高度变化而变化</a>的文章,但是发现并不符合新的需求,仍以原图为例<br><img src="http://7xl9u9.com1.z0.glb.clouddn.com/2016-5-30-15-24-43.png" alt="image"></p>
<p>现需求如下：</p>
<p>1.A、B元素平分C元素,即各占50%</p>
<p>2.A元素高度随B元素高度的变化而变化</p>
<p>3.B元素高度随A元素高度的变化而变化</p>
<p>简单来讲就是A,B任何一个元素高度变大则另一个元素的高度也会变大，这个效果有点类似table里的单元格，也就是table里的cell,想到有<code>display:table</code>属性，那自然应该有<code>display:table-cell</code>。结果一查api还真有,那就简单多了根本不用写js了直接样式就可以全搞定。父元素C用<code>display:table</code>,AB两个子元素用<code>display:table-cell</code>就可以了实现起来也是蛮简单的。  </p>
<p>可分别通过调节A元素的高度查看B元素的效果，通过调整B元素的高度查看A元素的效果</p>
<p><a href="http://www.zhuyangxing.cn/demo/div-auto-height.html">demo</a>在这里,如果打不开<a href="http://openks.oschina.io/demo/div-auto-height.html" target="_blank" rel="external">备用demo</a>在这里。</p>
<p></p><p data-height="490" data-theme-id="0" data-slug-hash="ZOVkYK" data-default-tab="result" data-user="openks" data-embed-version="2" class="codepen">See the Pen <a href="http://codepen.io/openks/pen/ZOVkYK/" target="_blank" rel="external">元素高度随兄弟元素高度变化而变化(二)</a> by openks (<a href="http://codepen.io/openks" target="_blank" rel="external">@openks</a>) on <a href="http://codepen.io" target="_blank" rel="external">CodePen</a>.</p><p></p>
<script async src="//assets.codepen.io/assets/embed/ei.js"></script>
]]></content>
    
    <summary type="html">
    
      元素高度随兄弟元素高度变化而变化
    
    </summary>
    
      <category term="前端" scheme="http://www.zhuyangxing.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="http://www.zhuyangxing.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>用 CSS3 和 JavaScript 制作径向动画菜单</title>
    <link href="http://www.zhuyangxing.cn/2016/06/24/css3-menu/"/>
    <id>http://www.zhuyangxing.cn/2016/06/24/css3-menu/</id>
    <published>2016-06-24T06:41:23.000Z</published>
    <updated>2017-01-14T05:31:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="用-CSS3-和-JavaScript-制作径向动画菜单"><a href="#用-CSS3-和-JavaScript-制作径向动画菜单" class="headerlink" title="用 CSS3 和 JavaScript 制作径向动画菜单"></a>用 CSS3 和 JavaScript 制作径向动画菜单</h1><p>先看demo</p>
<p></p><p data-height="308" data-theme-id="0" data-slug-hash="WxRQJP" data-default-tab="result" data-user="openks" data-embed-version="2" class="codepen">See the Pen <a href="http://codepen.io/openks/pen/WxRQJP/" target="_blank" rel="external">圆形动画菜单</a> by openks (<a href="http://codepen.io/openks" target="_blank" rel="external">@openks</a>) on <a href="http://codepen.io" target="_blank" rel="external">CodePen</a>.</p><p></p>
<script async src="//assets.codepen.io/assets/embed/ei.js"></script>

<p>html和css都不难，很容易实现，主要问题在于子图标个数和子图标之间的角度不一样<br>所有子节点都在O点，使用绝对定位后设置子节点的top和left值即可<br>以A点为例子(其中圆点为50%,50%)<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">left=(<span class="number">50</span>+AD距离)*<span class="number">100</span>%</div><div class="line">top=(<span class="number">50</span>-AE距离)*<span class="number">100</span>%</div></pre></td></tr></table></figure></p>
<p>一旦理解了这些就简单多了附图一张（其中n为子节点个数,i为第i个节点）<br><img src="http://7xl9u9.com1.z0.glb.clouddn.com/2016-06-24_15-18-30.png" alt="图片">;<br>来源在<a href="http://codepen.io/CreativePunch/pen/lAHiu" target="_blank" rel="external">这里</a><br>只不过我一直没看懂它到底是如何计算left和top的，不过思路应该差不多</p>
]]></content>
    
    <summary type="html">
    
      用 CSS3 和 JavaScript 制作径向动画菜单
    
    </summary>
    
      <category term="前端" scheme="http://www.zhuyangxing.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="http://www.zhuyangxing.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
</feed>
